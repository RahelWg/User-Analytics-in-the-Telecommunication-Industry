{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Week_2","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyO6JWc0MZtt56S1MLn1JGyZ"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"le9KJbdkb1K-","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":74},"executionInfo":{"status":"ok","timestamp":1596331590644,"user_tz":-180,"elapsed":2537,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"48182835-76c9-43b5-fc11-9232e9ce9ec1"},"source":["%matplotlib inline\n","import statsmodels.api as sm\n","import numpy as np\n","import scipy.stats as stats\n","import matplotlib.pyplot as plt\n","import pandas as pd\n","import seaborn as sns\n","sns.set()\n","from sklearn.preprocessing import StandardScaler\n","from sklearn.cluster import KMeans\n","import scipy.spatial.distance as sdist\n","import sklearn.cluster as cluster\n","import math"],"execution_count":7,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/statsmodels/tools/_testing.py:19: FutureWarning: pandas.util.testing is deprecated. Use the functions in the public API at pandas.testing instead.\n","  import pandas.util.testing as tm\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"BNgRf5Mi6Xz9","colab_type":"code","colab":{}},"source":["from google.colab import files \n","uploaded = files.upload()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"XWliG3Z0J6HB","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":210},"executionInfo":{"status":"error","timestamp":1596331580070,"user_tz":-180,"elapsed":1173,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"29a5606b-dac6-4d46-a498-8b47901be33d"},"source":["import io \n","da = pd.read_excel(io.BytesIO(uploaded['Week2_challenge_data_source.xlsx'])) \n","da.head()"],"execution_count":6,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-6-bb9b23ab4a8b>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mio\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mda\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread_excel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mio\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mBytesIO\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0muploaded\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Week2_challenge_data_source.xlsx'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m \u001b[0mda\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhead\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'pd' is not defined"]}]},{"cell_type":"code","metadata":{"id":"2Mn-U0OujUj1","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1596120969496,"user_tz":-180,"elapsed":1173,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"378948c0-7442-4d0c-be16-30829aae6fb5"},"source":["da.info()"],"execution_count":null,"outputs":[{"output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 150001 entries, 0 to 150000\n","Data columns (total 55 columns):\n"," #   Column                                    Non-Null Count   Dtype         \n","---  ------                                    --------------   -----         \n"," 0   Bearer Id                                 150001 non-null  object        \n"," 1   Start                                     150000 non-null  datetime64[ns]\n"," 2   Start ms                                  150000 non-null  float64       \n"," 3   End                                       150000 non-null  datetime64[ns]\n"," 4   End ms                                    150000 non-null  float64       \n"," 5   Dur. (ms)                                 150000 non-null  float64       \n"," 6   IMSI                                      149431 non-null  float64       \n"," 7   MSISDN/Number                             148935 non-null  float64       \n"," 8   IMEI                                      149429 non-null  float64       \n"," 9   Last Location Name                        148848 non-null  object        \n"," 10  Avg RTT DL (ms)                           122172 non-null  float64       \n"," 11  Avg RTT UL (ms)                           122189 non-null  float64       \n"," 12  Avg Bearer TP DL (kbps)                   150000 non-null  float64       \n"," 13  Avg Bearer TP UL (kbps)                   150000 non-null  float64       \n"," 14  TCP DL Retrans. Vol (Bytes)               61855 non-null   float64       \n"," 15  TCP UL Retrans. Vol (Bytes)               53352 non-null   float64       \n"," 16  DL TP < 50 Kbps (%)                       149247 non-null  float64       \n"," 17  50 Kbps < DL TP < 250 Kbps (%)            149247 non-null  float64       \n"," 18  250 Kbps < DL TP < 1 Mbps (%)             149247 non-null  float64       \n"," 19  DL TP > 1 Mbps (%)                        149247 non-null  float64       \n"," 20  UL TP < 10 Kbps (%)                       149209 non-null  float64       \n"," 21  10 Kbps < UL TP < 50 Kbps (%)             149209 non-null  float64       \n"," 22  50 Kbps < UL TP < 300 Kbps (%)            149209 non-null  float64       \n"," 23  UL TP > 300 Kbps (%)                      149209 non-null  float64       \n"," 24  HTTP DL (Bytes)                           68527 non-null   float64       \n"," 25  HTTP UL (Bytes)                           68191 non-null   float64       \n"," 26  Activity Duration DL (ms)                 150000 non-null  float64       \n"," 27  Activity Duration UL (ms)                 150000 non-null  float64       \n"," 28  Dur. (ms).1                               150000 non-null  float64       \n"," 29  Handset Manufacturer                      149429 non-null  object        \n"," 30  Handset Type                              149429 non-null  object        \n"," 31  Nb of sec with 125000B < Vol DL           52463 non-null   float64       \n"," 32  Nb of sec with 1250B < Vol UL < 6250B     57107 non-null   float64       \n"," 33  Nb of sec with 31250B < Vol DL < 125000B  56415 non-null   float64       \n"," 34  Nb of sec with 37500B < Vol UL            19747 non-null   float64       \n"," 35  Nb of sec with 6250B < Vol DL < 31250B    61684 non-null   float64       \n"," 36  Nb of sec with 6250B < Vol UL < 37500B    38158 non-null   float64       \n"," 37  Nb of sec with Vol DL < 6250B             149246 non-null  float64       \n"," 38  Nb of sec with Vol UL < 1250B             149208 non-null  float64       \n"," 39  Social Media DL (Bytes)                   150001 non-null  float64       \n"," 40  Social Media UL (Bytes)                   150001 non-null  float64       \n"," 41  Google DL (Bytes)                         150001 non-null  float64       \n"," 42  Google UL (Bytes)                         150001 non-null  float64       \n"," 43  Email DL (Bytes)                          150001 non-null  float64       \n"," 44  Email UL (Bytes)                          150001 non-null  float64       \n"," 45  Youtube DL (Bytes)                        150001 non-null  float64       \n"," 46  Youtube UL (Bytes)                        150001 non-null  float64       \n"," 47  Netflix DL (Bytes)                        150001 non-null  float64       \n"," 48  Netflix UL (Bytes)                        150001 non-null  float64       \n"," 49  Gaming DL (Bytes)                         150001 non-null  float64       \n"," 50  Gaming UL (Bytes)                         150001 non-null  float64       \n"," 51  Other DL (Bytes)                          150001 non-null  float64       \n"," 52  Other UL (Bytes)                          150001 non-null  float64       \n"," 53  Total UL (Bytes)                          150000 non-null  float64       \n"," 54  Total DL (Bytes)                          150000 non-null  float64       \n","dtypes: datetime64[ns](2), float64(49), object(4)\n","memory usage: 62.9+ MB\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"YTodSPNQXpi-","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":372},"executionInfo":{"status":"ok","timestamp":1596120980003,"user_tz":-180,"elapsed":1185,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"0cca6909-771b-4808-8ce1-1880e727d577"},"source":["da.describe()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Start ms</th>\n","      <th>End ms</th>\n","      <th>Dur. (ms)</th>\n","      <th>IMSI</th>\n","      <th>MSISDN/Number</th>\n","      <th>IMEI</th>\n","      <th>Avg RTT DL (ms)</th>\n","      <th>Avg RTT UL (ms)</th>\n","      <th>Avg Bearer TP DL (kbps)</th>\n","      <th>Avg Bearer TP UL (kbps)</th>\n","      <th>TCP DL Retrans. Vol (Bytes)</th>\n","      <th>TCP UL Retrans. Vol (Bytes)</th>\n","      <th>DL TP &lt; 50 Kbps (%)</th>\n","      <th>50 Kbps &lt; DL TP &lt; 250 Kbps (%)</th>\n","      <th>250 Kbps &lt; DL TP &lt; 1 Mbps (%)</th>\n","      <th>DL TP &gt; 1 Mbps (%)</th>\n","      <th>UL TP &lt; 10 Kbps (%)</th>\n","      <th>10 Kbps &lt; UL TP &lt; 50 Kbps (%)</th>\n","      <th>50 Kbps &lt; UL TP &lt; 300 Kbps (%)</th>\n","      <th>UL TP &gt; 300 Kbps (%)</th>\n","      <th>HTTP DL (Bytes)</th>\n","      <th>HTTP UL (Bytes)</th>\n","      <th>Activity Duration DL (ms)</th>\n","      <th>Activity Duration UL (ms)</th>\n","      <th>Dur. (ms).1</th>\n","      <th>Nb of sec with 125000B &lt; Vol DL</th>\n","      <th>Nb of sec with 1250B &lt; Vol UL &lt; 6250B</th>\n","      <th>Nb of sec with 31250B &lt; Vol DL &lt; 125000B</th>\n","      <th>Nb of sec with 37500B &lt; Vol UL</th>\n","      <th>Nb of sec with 6250B &lt; Vol DL &lt; 31250B</th>\n","      <th>Nb of sec with 6250B &lt; Vol UL &lt; 37500B</th>\n","      <th>Nb of sec with Vol DL &lt; 6250B</th>\n","      <th>Nb of sec with Vol UL &lt; 1250B</th>\n","      <th>Social Media DL (Bytes)</th>\n","      <th>Social Media UL (Bytes)</th>\n","      <th>Google DL (Bytes)</th>\n","      <th>Google UL (Bytes)</th>\n","      <th>Email DL (Bytes)</th>\n","      <th>Email UL (Bytes)</th>\n","      <th>Youtube DL (Bytes)</th>\n","      <th>Youtube UL (Bytes)</th>\n","      <th>Netflix DL (Bytes)</th>\n","      <th>Netflix UL (Bytes)</th>\n","      <th>Gaming DL (Bytes)</th>\n","      <th>Gaming UL (Bytes)</th>\n","      <th>Other DL (Bytes)</th>\n","      <th>Other UL (Bytes)</th>\n","      <th>Total UL (Bytes)</th>\n","      <th>Total DL (Bytes)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>150000.000000</td>\n","      <td>150000.000000</td>\n","      <td>1.500000e+05</td>\n","      <td>1.494310e+05</td>\n","      <td>1.489350e+05</td>\n","      <td>1.494290e+05</td>\n","      <td>122172.000000</td>\n","      <td>122189.000000</td>\n","      <td>150000.000000</td>\n","      <td>150000.000000</td>\n","      <td>6.185500e+04</td>\n","      <td>5.335200e+04</td>\n","      <td>149247.000000</td>\n","      <td>149247.000000</td>\n","      <td>149247.000000</td>\n","      <td>149247.000000</td>\n","      <td>149209.000000</td>\n","      <td>149209.000000</td>\n","      <td>149209.000000</td>\n","      <td>149209.000000</td>\n","      <td>6.852700e+04</td>\n","      <td>6.819100e+04</td>\n","      <td>1.500000e+05</td>\n","      <td>1.500000e+05</td>\n","      <td>1.500000e+05</td>\n","      <td>52463.000000</td>\n","      <td>57107.000000</td>\n","      <td>56415.000000</td>\n","      <td>19747.000000</td>\n","      <td>61684.000000</td>\n","      <td>38158.000000</td>\n","      <td>149246.000000</td>\n","      <td>149208.000000</td>\n","      <td>1.500010e+05</td>\n","      <td>150001.000000</td>\n","      <td>1.500010e+05</td>\n","      <td>1.500010e+05</td>\n","      <td>1.500010e+05</td>\n","      <td>150001.000000</td>\n","      <td>1.500010e+05</td>\n","      <td>1.500010e+05</td>\n","      <td>1.500010e+05</td>\n","      <td>1.500010e+05</td>\n","      <td>1.500010e+05</td>\n","      <td>1.500010e+05</td>\n","      <td>1.500010e+05</td>\n","      <td>1.500010e+05</td>\n","      <td>1.500000e+05</td>\n","      <td>1.500000e+05</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>499.188200</td>\n","      <td>498.800880</td>\n","      <td>1.046086e+05</td>\n","      <td>2.082016e+14</td>\n","      <td>4.188282e+10</td>\n","      <td>4.847455e+13</td>\n","      <td>109.795706</td>\n","      <td>17.662883</td>\n","      <td>13300.045927</td>\n","      <td>1770.428647</td>\n","      <td>2.080991e+07</td>\n","      <td>7.596587e+05</td>\n","      <td>92.844754</td>\n","      <td>3.069355</td>\n","      <td>1.717341</td>\n","      <td>1.609654</td>\n","      <td>98.530142</td>\n","      <td>0.776749</td>\n","      <td>0.147987</td>\n","      <td>0.078923</td>\n","      <td>1.144710e+08</td>\n","      <td>3.242301e+06</td>\n","      <td>1.829177e+06</td>\n","      <td>1.408880e+06</td>\n","      <td>1.046091e+08</td>\n","      <td>989.699998</td>\n","      <td>340.434395</td>\n","      <td>810.837401</td>\n","      <td>149.257052</td>\n","      <td>965.464756</td>\n","      <td>141.304812</td>\n","      <td>3719.787552</td>\n","      <td>4022.083454</td>\n","      <td>1.795322e+06</td>\n","      <td>32928.434380</td>\n","      <td>5.750753e+06</td>\n","      <td>2.056542e+06</td>\n","      <td>1.791729e+06</td>\n","      <td>467373.441940</td>\n","      <td>1.163407e+07</td>\n","      <td>1.100941e+07</td>\n","      <td>1.162685e+07</td>\n","      <td>1.100175e+07</td>\n","      <td>4.220447e+08</td>\n","      <td>8.288398e+06</td>\n","      <td>4.211005e+08</td>\n","      <td>8.264799e+06</td>\n","      <td>4.112121e+07</td>\n","      <td>4.546434e+08</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>288.611834</td>\n","      <td>288.097653</td>\n","      <td>8.103762e+04</td>\n","      <td>2.148809e+10</td>\n","      <td>2.447443e+12</td>\n","      <td>2.241637e+13</td>\n","      <td>619.782739</td>\n","      <td>84.793524</td>\n","      <td>23971.878541</td>\n","      <td>4625.355500</td>\n","      <td>1.825665e+08</td>\n","      <td>2.645305e+07</td>\n","      <td>13.038031</td>\n","      <td>6.215233</td>\n","      <td>4.159538</td>\n","      <td>4.828890</td>\n","      <td>4.634285</td>\n","      <td>3.225176</td>\n","      <td>1.624523</td>\n","      <td>1.295396</td>\n","      <td>9.631946e+08</td>\n","      <td>1.957064e+07</td>\n","      <td>5.696395e+06</td>\n","      <td>4.643231e+06</td>\n","      <td>8.103761e+07</td>\n","      <td>2546.524440</td>\n","      <td>1445.365032</td>\n","      <td>1842.162008</td>\n","      <td>1219.112287</td>\n","      <td>1946.387608</td>\n","      <td>993.349688</td>\n","      <td>9171.609010</td>\n","      <td>10160.324314</td>\n","      <td>1.035482e+06</td>\n","      <td>19006.178256</td>\n","      <td>3.309097e+06</td>\n","      <td>1.189917e+06</td>\n","      <td>1.035840e+06</td>\n","      <td>269969.307031</td>\n","      <td>6.710569e+06</td>\n","      <td>6.345423e+06</td>\n","      <td>6.725218e+06</td>\n","      <td>6.359490e+06</td>\n","      <td>2.439675e+08</td>\n","      <td>4.782700e+06</td>\n","      <td>2.432050e+08</td>\n","      <td>4.769004e+06</td>\n","      <td>1.127639e+07</td>\n","      <td>2.441429e+08</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>7.142000e+03</td>\n","      <td>2.040471e+14</td>\n","      <td>3.360100e+10</td>\n","      <td>4.400152e+11</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>2.000000e+00</td>\n","      <td>1.000000e+00</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>4.000000e+01</td>\n","      <td>4.000000e+01</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>7.142988e+06</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.200000e+01</td>\n","      <td>0.000000</td>\n","      <td>2.070000e+02</td>\n","      <td>3.000000e+00</td>\n","      <td>1.400000e+01</td>\n","      <td>2.000000</td>\n","      <td>5.300000e+01</td>\n","      <td>1.050000e+02</td>\n","      <td>4.200000e+01</td>\n","      <td>3.500000e+01</td>\n","      <td>2.516000e+03</td>\n","      <td>5.900000e+01</td>\n","      <td>3.290000e+03</td>\n","      <td>1.480000e+02</td>\n","      <td>2.866892e+06</td>\n","      <td>7.114041e+06</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>250.000000</td>\n","      <td>251.000000</td>\n","      <td>5.744050e+04</td>\n","      <td>2.082014e+14</td>\n","      <td>3.365130e+10</td>\n","      <td>3.546071e+13</td>\n","      <td>32.000000</td>\n","      <td>2.000000</td>\n","      <td>43.000000</td>\n","      <td>47.000000</td>\n","      <td>3.565150e+04</td>\n","      <td>4.694750e+03</td>\n","      <td>91.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>99.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.124035e+05</td>\n","      <td>2.432200e+04</td>\n","      <td>1.487775e+04</td>\n","      <td>2.153975e+04</td>\n","      <td>5.744079e+07</td>\n","      <td>20.000000</td>\n","      <td>10.000000</td>\n","      <td>26.000000</td>\n","      <td>2.000000</td>\n","      <td>39.000000</td>\n","      <td>3.000000</td>\n","      <td>87.000000</td>\n","      <td>106.000000</td>\n","      <td>8.991480e+05</td>\n","      <td>16448.000000</td>\n","      <td>2.882393e+06</td>\n","      <td>1.024279e+06</td>\n","      <td>8.927930e+05</td>\n","      <td>233383.000000</td>\n","      <td>5.833501e+06</td>\n","      <td>5.517965e+06</td>\n","      <td>5.777156e+06</td>\n","      <td>5.475981e+06</td>\n","      <td>2.104733e+08</td>\n","      <td>4.128476e+06</td>\n","      <td>2.101869e+08</td>\n","      <td>4.145943e+06</td>\n","      <td>3.322201e+07</td>\n","      <td>2.431068e+08</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>499.000000</td>\n","      <td>500.000000</td>\n","      <td>8.639900e+04</td>\n","      <td>2.082015e+14</td>\n","      <td>3.366371e+10</td>\n","      <td>3.572201e+13</td>\n","      <td>45.000000</td>\n","      <td>5.000000</td>\n","      <td>63.000000</td>\n","      <td>63.000000</td>\n","      <td>5.687300e+05</td>\n","      <td>2.094950e+04</td>\n","      <td>100.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>100.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.941949e+06</td>\n","      <td>2.297330e+05</td>\n","      <td>3.930450e+04</td>\n","      <td>4.679350e+04</td>\n","      <td>8.639998e+07</td>\n","      <td>128.000000</td>\n","      <td>52.000000</td>\n","      <td>164.000000</td>\n","      <td>8.000000</td>\n","      <td>288.000000</td>\n","      <td>8.000000</td>\n","      <td>203.000000</td>\n","      <td>217.000000</td>\n","      <td>1.794369e+06</td>\n","      <td>32920.000000</td>\n","      <td>5.765829e+06</td>\n","      <td>2.054573e+06</td>\n","      <td>1.793505e+06</td>\n","      <td>466250.000000</td>\n","      <td>1.161602e+07</td>\n","      <td>1.101345e+07</td>\n","      <td>1.164222e+07</td>\n","      <td>1.099638e+07</td>\n","      <td>4.234081e+08</td>\n","      <td>8.291208e+06</td>\n","      <td>4.218030e+08</td>\n","      <td>8.267071e+06</td>\n","      <td>4.114331e+07</td>\n","      <td>4.558411e+08</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>749.000000</td>\n","      <td>750.000000</td>\n","      <td>1.324302e+05</td>\n","      <td>2.082018e+14</td>\n","      <td>3.368349e+10</td>\n","      <td>8.611970e+13</td>\n","      <td>70.000000</td>\n","      <td>15.000000</td>\n","      <td>19710.750000</td>\n","      <td>1120.000000</td>\n","      <td>3.768308e+06</td>\n","      <td>8.402025e+04</td>\n","      <td>100.000000</td>\n","      <td>4.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>100.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>2.504290e+07</td>\n","      <td>1.542827e+06</td>\n","      <td>6.796095e+05</td>\n","      <td>5.990952e+05</td>\n","      <td>1.324308e+08</td>\n","      <td>693.500000</td>\n","      <td>203.000000</td>\n","      <td>757.000000</td>\n","      <td>35.000000</td>\n","      <td>1092.000000</td>\n","      <td>31.000000</td>\n","      <td>2650.000000</td>\n","      <td>2451.000000</td>\n","      <td>2.694938e+06</td>\n","      <td>49334.000000</td>\n","      <td>8.623552e+06</td>\n","      <td>3.088454e+06</td>\n","      <td>2.689327e+06</td>\n","      <td>700440.000000</td>\n","      <td>1.744852e+07</td>\n","      <td>1.651556e+07</td>\n","      <td>1.747048e+07</td>\n","      <td>1.650727e+07</td>\n","      <td>6.331742e+08</td>\n","      <td>1.243162e+07</td>\n","      <td>6.316918e+08</td>\n","      <td>1.238415e+07</td>\n","      <td>4.903424e+07</td>\n","      <td>6.657055e+08</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>999.000000</td>\n","      <td>999.000000</td>\n","      <td>1.859336e+06</td>\n","      <td>2.140743e+14</td>\n","      <td>8.823971e+14</td>\n","      <td>9.900120e+13</td>\n","      <td>96923.000000</td>\n","      <td>7120.000000</td>\n","      <td>378160.000000</td>\n","      <td>58613.000000</td>\n","      <td>4.294426e+09</td>\n","      <td>2.908226e+09</td>\n","      <td>100.000000</td>\n","      <td>93.000000</td>\n","      <td>100.000000</td>\n","      <td>94.000000</td>\n","      <td>100.000000</td>\n","      <td>98.000000</td>\n","      <td>100.000000</td>\n","      <td>96.000000</td>\n","      <td>7.253064e+10</td>\n","      <td>1.491890e+09</td>\n","      <td>1.365365e+08</td>\n","      <td>1.449113e+08</td>\n","      <td>1.859336e+09</td>\n","      <td>81476.000000</td>\n","      <td>85412.000000</td>\n","      <td>58525.000000</td>\n","      <td>50553.000000</td>\n","      <td>66913.000000</td>\n","      <td>49565.000000</td>\n","      <td>604061.000000</td>\n","      <td>604122.000000</td>\n","      <td>3.586064e+06</td>\n","      <td>65870.000000</td>\n","      <td>1.146283e+07</td>\n","      <td>4.121357e+06</td>\n","      <td>3.586146e+06</td>\n","      <td>936418.000000</td>\n","      <td>2.325910e+07</td>\n","      <td>2.201196e+07</td>\n","      <td>2.325919e+07</td>\n","      <td>2.201196e+07</td>\n","      <td>8.434419e+08</td>\n","      <td>1.655879e+07</td>\n","      <td>8.434425e+08</td>\n","      <td>1.655882e+07</td>\n","      <td>7.833131e+07</td>\n","      <td>9.029696e+08</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["            Start ms         End ms  ...  Total UL (Bytes)  Total DL (Bytes)\n","count  150000.000000  150000.000000  ...      1.500000e+05      1.500000e+05\n","mean      499.188200     498.800880  ...      4.112121e+07      4.546434e+08\n","std       288.611834     288.097653  ...      1.127639e+07      2.441429e+08\n","min         0.000000       0.000000  ...      2.866892e+06      7.114041e+06\n","25%       250.000000     251.000000  ...      3.322201e+07      2.431068e+08\n","50%       499.000000     500.000000  ...      4.114331e+07      4.558411e+08\n","75%       749.000000     750.000000  ...      4.903424e+07      6.657055e+08\n","max       999.000000     999.000000  ...      7.833131e+07      9.029696e+08\n","\n","[8 rows x 49 columns]"]},"metadata":{"tags":[]},"execution_count":32}]},{"cell_type":"markdown","metadata":{"id":"iXEeub3GUh-W","colab_type":"text"},"source":["##Function for defining the upper and lower boundries"]},{"cell_type":"code","metadata":{"id":"bUsXpRv3DG_D","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1596312992007,"user_tz":-180,"elapsed":1302,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}}},"source":["def normal_boundaries(da, variable, distance):\n","\n","    # calculate the boundaries outside which sit the outliers\n","    # for a Gaussian distribution\n","\n","    upper_boundary = da[variable].mean() + distance * da[variable].std()\n","    lower_boundary = da[variable].mean() - distance * da[variable].std()\n","\n","    return upper_boundary, lower_boundary"],"execution_count":32,"outputs":[]},{"cell_type":"code","metadata":{"id":"2QaWrZQ7vUbQ","colab_type":"code","colab":{}},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"ILZzp_lpWXwr","colab_type":"text"},"source":["#Number of xDR sessions"]},{"cell_type":"code","metadata":{"id":"RUhc7kwJx9rf","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":455},"executionInfo":{"status":"ok","timestamp":1596274522962,"user_tz":-180,"elapsed":51992,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"76921aed-49f6-41a1-e2ff-ba22b82092a2"},"source":["grouped_data= da.groupby('MSISDN/Number')\n","grouped_data.agg({\"Bearer Id\": \"count\"})\n"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Bearer Id</th>\n","    </tr>\n","    <tr>\n","      <th>MSISDN/Number</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>3.360100e+10</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3.360100e+10</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3.360100e+10</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3.360101e+10</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3.360101e+10</th>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>3.379000e+10</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3.379000e+10</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3.197021e+12</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3.370000e+14</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>8.823971e+14</th>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>106856 rows × 1 columns</p>\n","</div>"],"text/plain":["               Bearer Id\n","MSISDN/Number           \n","3.360100e+10           1\n","3.360100e+10           1\n","3.360100e+10           1\n","3.360101e+10           1\n","3.360101e+10           2\n","...                  ...\n","3.379000e+10           1\n","3.379000e+10           1\n","3.197021e+12           1\n","3.370000e+14           1\n","8.823971e+14           1\n","\n","[106856 rows x 1 columns]"]},"metadata":{"tags":[]},"execution_count":10}]},{"cell_type":"markdown","metadata":{"id":"J4mmPHlNUZZ4","colab_type":"text"},"source":["#Session duration"]},{"cell_type":"code","metadata":{"id":"J93NoB_t5R8h","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":455},"executionInfo":{"status":"ok","timestamp":1596274564656,"user_tz":-180,"elapsed":1458,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"9bd781d4-a648-4dad-ede0-5d347fef3c28"},"source":["grouped_data= da.groupby('MSISDN/Number')\n","grouped_data.agg({\"Dur. (ms)\": \"sum\"})\n"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Dur. (ms)</th>\n","    </tr>\n","    <tr>\n","      <th>MSISDN/Number</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>3.360100e+10</th>\n","      <td>116720.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.360100e+10</th>\n","      <td>181230.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.360100e+10</th>\n","      <td>134969.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.360101e+10</th>\n","      <td>49878.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.360101e+10</th>\n","      <td>37104.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>3.379000e+10</th>\n","      <td>8810.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.379000e+10</th>\n","      <td>140988.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.197021e+12</th>\n","      <td>877385.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.370000e+14</th>\n","      <td>253030.0</td>\n","    </tr>\n","    <tr>\n","      <th>8.823971e+14</th>\n","      <td>869844.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>106856 rows × 1 columns</p>\n","</div>"],"text/plain":["               Dur. (ms)\n","MSISDN/Number           \n","3.360100e+10    116720.0\n","3.360100e+10    181230.0\n","3.360100e+10    134969.0\n","3.360101e+10     49878.0\n","3.360101e+10     37104.0\n","...                  ...\n","3.379000e+10      8810.0\n","3.379000e+10    140988.0\n","3.197021e+12    877385.0\n","3.370000e+14    253030.0\n","8.823971e+14    869844.0\n","\n","[106856 rows x 1 columns]"]},"metadata":{"tags":[]},"execution_count":11}]},{"cell_type":"code","metadata":{"id":"cGYx0GZXT7Mk","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1596313022019,"user_tz":-180,"elapsed":1238,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"d4ec62cb-9e07-4acf-d7d2-d6088509ea96"},"source":["# Upper and lower limits of duration\n","dur_upper_limit, dur_lower_limit = normal_boundaries(da, 'Dur. (ms)', 1.5)\n","dur_upper_limit, dur_lower_limit"],"execution_count":33,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(226164.99256513722, -16947.8718718039)"]},"metadata":{"tags":[]},"execution_count":33}]},{"cell_type":"code","metadata":{"id":"WXkZJUb7TbrT","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1596313024032,"user_tz":-180,"elapsed":1254,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}}},"source":["# Replacing the outliers by the maximum and minimum limit\n","\n","da['Dur. (ms)']= np.where(da['Dur. (ms)'] > dur_upper_limit, dur_upper_limit,\n","                       np.where(da['Dur. (ms)'] < dur_lower_limit, dur_lower_limit, da['Dur. (ms)']))"],"execution_count":34,"outputs":[]},{"cell_type":"code","metadata":{"id":"D8JUbS5ckfms","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":487},"executionInfo":{"status":"ok","timestamp":1596274615880,"user_tz":-180,"elapsed":1010,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"d1b0e9c7-14c5-43c1-b623-6cc63e35c852"},"source":["# Session duration session for each customer\n","da.rename(columns = {'Dur. (ms).1':'dur'}, inplace = True)\n","X = grouped_data.agg({'dur': ['count','mean','median','std','' 'min', 'max','quantile']})\n","X\n","\n"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead tr th {\n","        text-align: left;\n","    }\n","\n","    .dataframe thead tr:last-of-type th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr>\n","      <th></th>\n","      <th colspan=\"7\" halign=\"left\">dur</th>\n","    </tr>\n","    <tr>\n","      <th></th>\n","      <th>count</th>\n","      <th>mean</th>\n","      <th>median</th>\n","      <th>std</th>\n","      <th>min</th>\n","      <th>max</th>\n","      <th>quantile</th>\n","    </tr>\n","    <tr>\n","      <th>MSISDN/Number</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>3.360100e+10</th>\n","      <td>1</td>\n","      <td>116720140.0</td>\n","      <td>116720140.0</td>\n","      <td>NaN</td>\n","      <td>116720140.0</td>\n","      <td>116720140.0</td>\n","      <td>116720140.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.360100e+10</th>\n","      <td>1</td>\n","      <td>181230963.0</td>\n","      <td>181230963.0</td>\n","      <td>NaN</td>\n","      <td>181230963.0</td>\n","      <td>181230963.0</td>\n","      <td>181230963.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.360100e+10</th>\n","      <td>1</td>\n","      <td>134969374.0</td>\n","      <td>134969374.0</td>\n","      <td>NaN</td>\n","      <td>134969374.0</td>\n","      <td>134969374.0</td>\n","      <td>134969374.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.360101e+10</th>\n","      <td>1</td>\n","      <td>49878024.0</td>\n","      <td>49878024.0</td>\n","      <td>NaN</td>\n","      <td>49878024.0</td>\n","      <td>49878024.0</td>\n","      <td>49878024.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.360101e+10</th>\n","      <td>2</td>\n","      <td>18552226.5</td>\n","      <td>18552226.5</td>\n","      <td>4379.112296</td>\n","      <td>18549130.0</td>\n","      <td>18555323.0</td>\n","      <td>18552226.5</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>3.379000e+10</th>\n","      <td>1</td>\n","      <td>8810688.0</td>\n","      <td>8810688.0</td>\n","      <td>NaN</td>\n","      <td>8810688.0</td>\n","      <td>8810688.0</td>\n","      <td>8810688.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.379000e+10</th>\n","      <td>1</td>\n","      <td>140988659.0</td>\n","      <td>140988659.0</td>\n","      <td>NaN</td>\n","      <td>140988659.0</td>\n","      <td>140988659.0</td>\n","      <td>140988659.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.197021e+12</th>\n","      <td>1</td>\n","      <td>877385325.0</td>\n","      <td>877385325.0</td>\n","      <td>NaN</td>\n","      <td>877385325.0</td>\n","      <td>877385325.0</td>\n","      <td>877385325.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.370000e+14</th>\n","      <td>1</td>\n","      <td>253030201.0</td>\n","      <td>253030201.0</td>\n","      <td>NaN</td>\n","      <td>253030201.0</td>\n","      <td>253030201.0</td>\n","      <td>253030201.0</td>\n","    </tr>\n","    <tr>\n","      <th>8.823971e+14</th>\n","      <td>1</td>\n","      <td>869844200.0</td>\n","      <td>869844200.0</td>\n","      <td>NaN</td>\n","      <td>869844200.0</td>\n","      <td>869844200.0</td>\n","      <td>869844200.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>106856 rows × 7 columns</p>\n","</div>"],"text/plain":["                dur               ...                          \n","              count         mean  ...          max     quantile\n","MSISDN/Number                     ...                          \n","3.360100e+10      1  116720140.0  ...  116720140.0  116720140.0\n","3.360100e+10      1  181230963.0  ...  181230963.0  181230963.0\n","3.360100e+10      1  134969374.0  ...  134969374.0  134969374.0\n","3.360101e+10      1   49878024.0  ...   49878024.0   49878024.0\n","3.360101e+10      2   18552226.5  ...   18555323.0   18552226.5\n","...             ...          ...  ...          ...          ...\n","3.379000e+10      1    8810688.0  ...    8810688.0    8810688.0\n","3.379000e+10      1  140988659.0  ...  140988659.0  140988659.0\n","3.197021e+12      1  877385325.0  ...  877385325.0  877385325.0\n","3.370000e+14      1  253030201.0  ...  253030201.0  253030201.0\n","8.823971e+14      1  869844200.0  ...  869844200.0  869844200.0\n","\n","[106856 rows x 7 columns]"]},"metadata":{"tags":[]},"execution_count":15}]},{"cell_type":"code","metadata":{"id":"pXRY62-Gmmc-","colab_type":"code","colab":{}},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"ebijMi-2tAzg","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":334},"executionInfo":{"status":"ok","timestamp":1596274623905,"user_tz":-180,"elapsed":1896,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"f2810561-fa18-4a7d-921f-d5204d7e025b"},"source":["da.hist(column='dur')"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[<matplotlib.axes._subplots.AxesSubplot object at 0x7fc061af4710>]],\n","      dtype=object)"]},"metadata":{"tags":[]},"execution_count":16},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"markdown","metadata":{"id":"xk9duWVvRMpU","colab_type":"text"},"source":["##The total upload (UL) data"]},{"cell_type":"code","metadata":{"id":"PsNEyQAuVqfA","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1596313046270,"user_tz":-180,"elapsed":1246,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"b47abdd9-6aa0-4a4a-b6b4-0bce733fe09f"},"source":["Total_UL_upper_limit, Total_UL_lower_limit = normal_boundaries(da, 'Total UL (Bytes)', 1.5)\n","Total_UL_upper_limit, Total_UL_lower_limit"],"execution_count":35,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(58035786.06414018, 24206626.520073153)"]},"metadata":{"tags":[]},"execution_count":35}]},{"cell_type":"code","metadata":{"id":"OSUdiOspVDDw","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1596313048256,"user_tz":-180,"elapsed":1052,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}}},"source":["da['Total UL (Bytes)']= np.where(da['Total UL (Bytes)'] > Total_UL_upper_limit, Total_UL_upper_limit,\n","                       np.where(da['Total UL (Bytes)'] < Total_UL_lower_limit, Total_UL_lower_limit, da['Total UL (Bytes)']))"],"execution_count":36,"outputs":[]},{"cell_type":"code","metadata":{"id":"D87a37x8X8ZD","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":183},"executionInfo":{"status":"ok","timestamp":1596313087724,"user_tz":-180,"elapsed":1219,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"6aabd474-0892-40df-9ceb-f0c7d002aea9"},"source":["TDU= da['Total_data_upload'] = da['Total UL (Bytes)']\n","TDU.describe()"],"execution_count":38,"outputs":[{"output_type":"execute_result","data":{"text/plain":["count    1.500000e+05\n","mean     4.112238e+07\n","std      1.011854e+07\n","min      2.420663e+07\n","25%      3.322201e+07\n","50%      4.114331e+07\n","75%      4.903424e+07\n","max      5.803579e+07\n","Name: Total UL (Bytes), dtype: float64"]},"metadata":{"tags":[]},"execution_count":38}]},{"cell_type":"code","metadata":{"id":"zD0oDKA2R8m5","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":299},"executionInfo":{"status":"ok","timestamp":1596123530019,"user_tz":-180,"elapsed":1253,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"c8c926a2-b3ec-4aa5-cdfc-a4ea0a6ef745"},"source":["TDU.hist()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f9f8c65aba8>"]},"metadata":{"tags":[]},"execution_count":63},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"markdown","metadata":{"id":"7Wn0ejTkRI8Q","colab_type":"text"},"source":["# The total download (DL)"]},{"cell_type":"code","metadata":{"id":"q_1FQ0eRQn2s","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":183},"executionInfo":{"status":"ok","timestamp":1596313101132,"user_tz":-180,"elapsed":1326,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"863ffc07-3501-4867-98fe-81e3d4ac82cc"},"source":["TDD= da['Total_data_download'] = da['Total DL (Bytes)']\n","TDD.describe()"],"execution_count":39,"outputs":[{"output_type":"execute_result","data":{"text/plain":["count    1.500000e+05\n","mean     4.546434e+08\n","std      2.441429e+08\n","min      7.114041e+06\n","25%      2.431068e+08\n","50%      4.558411e+08\n","75%      6.657055e+08\n","max      9.029696e+08\n","Name: Total DL (Bytes), dtype: float64"]},"metadata":{"tags":[]},"execution_count":39}]},{"cell_type":"code","metadata":{"id":"8jgWTjTFj55G","colab_type":"code","colab":{}},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"2el4tcufSF8L","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":299},"executionInfo":{"status":"ok","timestamp":1596121978058,"user_tz":-180,"elapsed":1417,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"63494aa9-d5df-48c8-e52b-0ce8c291b4b2"},"source":["TDD.hist()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f9f86dc42b0>"]},"metadata":{"tags":[]},"execution_count":43},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"markdown","metadata":{"id":"hbpFWXJYXn_s","colab_type":"text"},"source":["# The total data volume"]},{"cell_type":"code","metadata":{"id":"wrgtl9RrxPZw","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":183},"executionInfo":{"status":"ok","timestamp":1596313109838,"user_tz":-180,"elapsed":1241,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"e4a63076-4db2-4f71-90d9-f3a7a14873f0"},"source":["TD= da['Total_data'] = da['Total UL (Bytes)'] + da['Total DL (Bytes)']\n","TD.describe()"],"execution_count":40,"outputs":[{"output_type":"execute_result","data":{"text/plain":["count    1.500000e+05\n","mean     4.957658e+08\n","std      2.443335e+08\n","min      3.132067e+07\n","25%      2.844258e+08\n","50%      4.968666e+08\n","75%      7.065848e+08\n","max      9.523075e+08\n","dtype: float64"]},"metadata":{"tags":[]},"execution_count":40}]},{"cell_type":"code","metadata":{"id":"H2Rmeyb-kDZZ","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":455},"executionInfo":{"status":"ok","timestamp":1596313321512,"user_tz":-180,"elapsed":210523,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"b0c29845-8f05-4331-c70a-7cafb30f4571"},"source":["grouped_data= da.groupby('MSISDN/Number')\n","grouped_data.agg('Total_data').describe()"],"execution_count":41,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","      <th>mean</th>\n","      <th>std</th>\n","      <th>min</th>\n","      <th>25%</th>\n","      <th>50%</th>\n","      <th>75%</th>\n","      <th>max</th>\n","    </tr>\n","    <tr>\n","      <th>MSISDN/Number</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>3.360100e+10</th>\n","      <td>1.0</td>\n","      <td>8.786906e+08</td>\n","      <td>NaN</td>\n","      <td>8.786906e+08</td>\n","      <td>8.786906e+08</td>\n","      <td>8.786906e+08</td>\n","      <td>8.786906e+08</td>\n","      <td>8.786906e+08</td>\n","    </tr>\n","    <tr>\n","      <th>3.360100e+10</th>\n","      <td>1.0</td>\n","      <td>1.568596e+08</td>\n","      <td>NaN</td>\n","      <td>1.568596e+08</td>\n","      <td>1.568596e+08</td>\n","      <td>1.568596e+08</td>\n","      <td>1.568596e+08</td>\n","      <td>1.568596e+08</td>\n","    </tr>\n","    <tr>\n","      <th>3.360100e+10</th>\n","      <td>1.0</td>\n","      <td>5.959665e+08</td>\n","      <td>NaN</td>\n","      <td>5.959665e+08</td>\n","      <td>5.959665e+08</td>\n","      <td>5.959665e+08</td>\n","      <td>5.959665e+08</td>\n","      <td>5.959665e+08</td>\n","    </tr>\n","    <tr>\n","      <th>3.360101e+10</th>\n","      <td>1.0</td>\n","      <td>4.261998e+08</td>\n","      <td>NaN</td>\n","      <td>4.261998e+08</td>\n","      <td>4.261998e+08</td>\n","      <td>4.261998e+08</td>\n","      <td>4.261998e+08</td>\n","      <td>4.261998e+08</td>\n","    </tr>\n","    <tr>\n","      <th>3.360101e+10</th>\n","      <td>2.0</td>\n","      <td>7.287055e+08</td>\n","      <td>2.024123e+08</td>\n","      <td>5.855784e+08</td>\n","      <td>6.571419e+08</td>\n","      <td>7.287055e+08</td>\n","      <td>8.002690e+08</td>\n","      <td>8.718326e+08</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>3.379000e+10</th>\n","      <td>1.0</td>\n","      <td>7.146416e+08</td>\n","      <td>NaN</td>\n","      <td>7.146416e+08</td>\n","      <td>7.146416e+08</td>\n","      <td>7.146416e+08</td>\n","      <td>7.146416e+08</td>\n","      <td>7.146416e+08</td>\n","    </tr>\n","    <tr>\n","      <th>3.379000e+10</th>\n","      <td>1.0</td>\n","      <td>4.803073e+08</td>\n","      <td>NaN</td>\n","      <td>4.803073e+08</td>\n","      <td>4.803073e+08</td>\n","      <td>4.803073e+08</td>\n","      <td>4.803073e+08</td>\n","      <td>4.803073e+08</td>\n","    </tr>\n","    <tr>\n","      <th>3.197021e+12</th>\n","      <td>1.0</td>\n","      <td>2.321240e+08</td>\n","      <td>NaN</td>\n","      <td>2.321240e+08</td>\n","      <td>2.321240e+08</td>\n","      <td>2.321240e+08</td>\n","      <td>2.321240e+08</td>\n","      <td>2.321240e+08</td>\n","    </tr>\n","    <tr>\n","      <th>3.370000e+14</th>\n","      <td>1.0</td>\n","      <td>5.962878e+08</td>\n","      <td>NaN</td>\n","      <td>5.962878e+08</td>\n","      <td>5.962878e+08</td>\n","      <td>5.962878e+08</td>\n","      <td>5.962878e+08</td>\n","      <td>5.962878e+08</td>\n","    </tr>\n","    <tr>\n","      <th>8.823971e+14</th>\n","      <td>1.0</td>\n","      <td>1.367334e+08</td>\n","      <td>NaN</td>\n","      <td>1.367334e+08</td>\n","      <td>1.367334e+08</td>\n","      <td>1.367334e+08</td>\n","      <td>1.367334e+08</td>\n","      <td>1.367334e+08</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>106856 rows × 8 columns</p>\n","</div>"],"text/plain":["               count          mean  ...           75%           max\n","MSISDN/Number                       ...                            \n","3.360100e+10     1.0  8.786906e+08  ...  8.786906e+08  8.786906e+08\n","3.360100e+10     1.0  1.568596e+08  ...  1.568596e+08  1.568596e+08\n","3.360100e+10     1.0  5.959665e+08  ...  5.959665e+08  5.959665e+08\n","3.360101e+10     1.0  4.261998e+08  ...  4.261998e+08  4.261998e+08\n","3.360101e+10     2.0  7.287055e+08  ...  8.002690e+08  8.718326e+08\n","...              ...           ...  ...           ...           ...\n","3.379000e+10     1.0  7.146416e+08  ...  7.146416e+08  7.146416e+08\n","3.379000e+10     1.0  4.803073e+08  ...  4.803073e+08  4.803073e+08\n","3.197021e+12     1.0  2.321240e+08  ...  2.321240e+08  2.321240e+08\n","3.370000e+14     1.0  5.962878e+08  ...  5.962878e+08  5.962878e+08\n","8.823971e+14     1.0  1.367334e+08  ...  1.367334e+08  1.367334e+08\n","\n","[106856 rows x 8 columns]"]},"metadata":{"tags":[]},"execution_count":41}]},{"cell_type":"code","metadata":{"id":"PMa5lbvoPiNV","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":299},"executionInfo":{"status":"ok","timestamp":1596089214702,"user_tz":-180,"elapsed":1249,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"609fee66-559d-4742-b92d-ea6989862a14"},"source":["TD.hist()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f58b298d780>"]},"metadata":{"tags":[]},"execution_count":16},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"markdown","metadata":{"id":"pQu7yQytX8wm","colab_type":"text"},"source":["##Top 3 handsets manufactorers"]},{"cell_type":"code","metadata":{"id":"pNHjB4qOb4M7","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":286},"executionInfo":{"status":"ok","timestamp":1596209230246,"user_tz":-180,"elapsed":1275,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"ca988b4d-8028-4e0e-f22c-6bf8900cdc92"},"source":["x= da['Handset Manufacturer'].value_counts().head(3)\n","x.hist()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f8c3b4089e8>"]},"metadata":{"tags":[]},"execution_count":94},{"output_type":"display_data","data":{"image/png":"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rZLD4VBpaanq6up0+PBhrVu3LulhHI6CFCL8V9nCuSk/Nl3pzJ0OGzPHk2/z5IJtmXORN9/eU4kyp/PvJGH5h0IhlZeXy+l0SpKcTqfKysoUCoUmlX8oFFJFRUXstsfj0fnz56c1zMKF86a1/oOe3bY85cemy+WaPyOva2PmePJtnlywLXMu8ubbeyqbmfkLXwCwUMLy93g8GhoaUiQSkfTfv9gdHh6Wx+OZsu7cuXOx26FQSIsWLcrwuACATEhY/i6XS16vV8FgUJIUDAbl9XonnfKRpPr6enV3dysajWp0dFTHjh2Tz+fLztQAgLQUGGNMokWnT5/W5s2bdfHiRS1YsEAdHR26++671dLSou985zu69957FYlE9MQTT+jVV1+VJLW0tKi5uTnrAQAA05dU+QMAZhf+whcALET5A4CFKH8AsBDlDwAW+lCU/4YNG7Ry5Uo1NTUpEAjo73//uySptrZW9fX1amxsVGNjo373u9/FHvOXv/xFK1eulM/n09q1axUOh9Pelmu7du1SdXW13n777YSzzca81dXVamhoiO3fU6dOxdYeP35c9fX1WrZsmR555BG99957aW/LpXjH7mzex/Eyz9b9fO3aNbW1tWn58uVqaGjQ448/LunWF8rMxra4zIfAxYsXYz//5je/MU1NTcYYY7761a+aU6dOTVkfiURMXV2dee2114wxxuzevdts3rw5rW259uabb5qHH344ljEbmfI5rzHG3HPPPWZ8fHzK2vHxcfPFL37RDAwMGGOM2bp1q9m5c2da23LtZsfubN/H8d6vs3U/79ixwzz55JMmGo0aY4wZGRkxxhizZs0ac+DAAWOMMQcOHDBr1qyJPSYb2+L5UJT/B/361782Dz30kDEm/sH017/+1axYsSJ2OxwOm8997nNpbcula9eumdWrV5vBwcFYxmxkyue8xsQvhZ6eHrN+/frY7ZMnT5oHH3wwrW25drNjdzbvY2OmX/4f5v08Pj5uampqpuS6cOGCqampMRMTE8YYYyYmJkxNTY0Jh8NZ2XYrCS/sli9+8IMf6NVXX5UxRr/4xS9i9z/66KMyxqimpkbf+973tGDBgikXmSstLVU0GtXY2FjK20pKSnITVNLTTz+tlStXavHixbH7spEpn/O+b82aNYpEInrggQe0ceNGFRUVTZm7oqJCoVBI0tR/T8lumwn//9idzfv4fTd7v0qzbz8PDg6qpKREu3bt0okTJzRv3jx997vf1Zw5c+JeKNMYk/Ft//9KDB/0oTjnL0lPPvmkXnnlFW3atEk//elPJUn79+/Xyy+/rBdffFHGGD3xxBMzPGX63njjDb355psKBAIzPUpO3CrvK6+8opdeekn79+/XP/7xD+3evXsGJsyO2XjsJhIv82zcz5FIRIODg/rUpz6ll156SY8++qg2btyoK1euzPRoMR+a8n9fU1OTTpw4oXfffTd2cbmioiIFAgG9/vrrkqZeZG50dFQOh0MlJSUpb8uV1157TadPn9bSpUtVW1ur8+fP6+GHH9a//vWvjGfK57y9vb2x/Tt//nytWrUq7v49d+5cbG2q23LtZsduNvZjPuzj993q/SrNrv3s8XhUWFgov98vSbrvvvu0cOFCzZkzJ+6FMm91Ec1Ut91K3pf/5cuXJ/2R7fjx47rjjjt0++2369KlS5IkY4x6enrk9XolSZ/5zGd09epV/elPf5IkPf/886qvr09rW66sX79evb29On78uI4fP65Fixbp2Wef1bp16zKeKZ/z3nvvvbp69aokaWJiQkeOHInt3yVLlqivry/2Gw3PP/+8vva1r6W1LZeuXLly02M3G/sxH/axFD/zf/7zn1m5n0tLS3X//ffHrnU2MDCgcDisysrKuBfKvNVFNFPddit5f22fCxcuaMOGDXrvvffkcDh0xx136LHHHtOCBQu0ceNGRSIRRaNRVVVVadu2bSorK5Mkvf7662pra9O1a9d055136qmnntJHP/rRtLbNhNraWj3zzDO65557spIpX/NevnxZra2tKigo0MTEhD7/+c9r69atmjfvv//Dn2PHjumpp55SNBqV1+vVT37yE33kIx9Ja1uuDA4Oxj12Z+s+jpf53//+96zez1u3btXY2JgKCwv1yCOP6Mtf/nLcC2VK8S+imc62ePK+/AEAmZf3p30AAJlH+QOAhSh/ALAQ5Q8AFqL8AcBClD8AWIjyBwALUf4AYKH/A5gJgdrH2WDPAAAAAElFTkSuQmCC\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"markdown","metadata":{"id":"SLsIoRD6Yexn","colab_type":"text"},"source":["##Top 10 handsets used by the customers"]},{"cell_type":"code","metadata":{"id":"qGAbKvH3gU9f","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":219},"executionInfo":{"status":"ok","timestamp":1596122248463,"user_tz":-180,"elapsed":1551,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"afc81228-73fc-45a4-e691-8893f60bbe70"},"source":["da['Handset Type'].value_counts().head(10)\n"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Huawei B528S-23A                19752\n","Apple iPhone 6S (A1688)          9419\n","Apple iPhone 6 (A1586)           9023\n","undefined                        8987\n","Apple iPhone 7 (A1778)           6326\n","Apple iPhone Se (A1723)          5187\n","Apple iPhone 8 (A1905)           4993\n","Apple iPhone Xr (A2105)          4568\n","Samsung Galaxy S8 (Sm-G950F)     4520\n","Apple iPhone X (A1901)           3813\n","Name: Handset Type, dtype: int64"]},"metadata":{"tags":[]},"execution_count":49}]},{"cell_type":"code","metadata":{"id":"qZxfMadUbaxi","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"status":"ok","timestamp":1596129178201,"user_tz":-180,"elapsed":1172,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"9631797a-6e67-40b5-b6e7-8ff8c0535833"},"source":["handset_data = pd.DataFrame(da,columns=['Handset Manufacturer','Handset Type'])\n","handset_data"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Handset Manufacturer</th>\n","      <th>Handset Type</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Samsung</td>\n","      <td>Samsung Galaxy A5 Sm-A520F</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Samsung</td>\n","      <td>Samsung Galaxy J5 (Sm-J530)</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Samsung</td>\n","      <td>Samsung Galaxy A8 (2018)</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>undefined</td>\n","      <td>undefined</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Samsung</td>\n","      <td>Samsung Sm-G390F</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>149996</th>\n","      <td>Apple</td>\n","      <td>Apple iPhone 8 Plus (A1897)</td>\n","    </tr>\n","    <tr>\n","      <th>149997</th>\n","      <td>Apple</td>\n","      <td>Apple iPhone Se (A1723)</td>\n","    </tr>\n","    <tr>\n","      <th>149998</th>\n","      <td>Apple</td>\n","      <td>Apple iPhone Xs (A2097)</td>\n","    </tr>\n","    <tr>\n","      <th>149999</th>\n","      <td>Huawei</td>\n","      <td>Huawei Fig-Lx1</td>\n","    </tr>\n","    <tr>\n","      <th>150000</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>150001 rows × 2 columns</p>\n","</div>"],"text/plain":["       Handset Manufacturer                 Handset Type\n","0                   Samsung   Samsung Galaxy A5 Sm-A520F\n","1                   Samsung  Samsung Galaxy J5 (Sm-J530)\n","2                   Samsung     Samsung Galaxy A8 (2018)\n","3                 undefined                    undefined\n","4                   Samsung             Samsung Sm-G390F\n","...                     ...                          ...\n","149996                Apple  Apple iPhone 8 Plus (A1897)\n","149997                Apple      Apple iPhone Se (A1723)\n","149998                Apple      Apple iPhone Xs (A2097)\n","149999               Huawei               Huawei Fig-Lx1\n","150000                  NaN                          NaN\n","\n","[150001 rows x 2 columns]"]},"metadata":{"tags":[]},"execution_count":67}]},{"cell_type":"code","metadata":{"id":"5Tzy6K-Je0JZ","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":455},"executionInfo":{"status":"ok","timestamp":1596313366069,"user_tz":-180,"elapsed":1247,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"33ef6dc1-2c11-40e1-8769-113f5d765c80"},"source":["x= da.groupby(['MSISDN/Number']).agg({'Email UL (Bytes)':'sum','Email DL (Bytes)':'sum'})\n","x"],"execution_count":42,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Email UL (Bytes)</th>\n","      <th>Email DL (Bytes)</th>\n","    </tr>\n","    <tr>\n","      <th>MSISDN/Number</th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>3.360100e+10</th>\n","      <td>493962.0</td>\n","      <td>837400.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.360100e+10</th>\n","      <td>478960.0</td>\n","      <td>2828821.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.360100e+10</th>\n","      <td>768880.0</td>\n","      <td>2436500.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.360101e+10</th>\n","      <td>106052.0</td>\n","      <td>2178618.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.360101e+10</th>\n","      <td>1057661.0</td>\n","      <td>2247808.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>3.379000e+10</th>\n","      <td>525969.0</td>\n","      <td>480946.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.379000e+10</th>\n","      <td>664.0</td>\n","      <td>2513433.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.197021e+12</th>\n","      <td>678492.0</td>\n","      <td>842279.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.370000e+14</th>\n","      <td>328919.0</td>\n","      <td>2989663.0</td>\n","    </tr>\n","    <tr>\n","      <th>8.823971e+14</th>\n","      <td>812549.0</td>\n","      <td>2518425.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>106856 rows × 2 columns</p>\n","</div>"],"text/plain":["               Email UL (Bytes)  Email DL (Bytes)\n","MSISDN/Number                                    \n","3.360100e+10           493962.0          837400.0\n","3.360100e+10           478960.0         2828821.0\n","3.360100e+10           768880.0         2436500.0\n","3.360101e+10           106052.0         2178618.0\n","3.360101e+10          1057661.0         2247808.0\n","...                         ...               ...\n","3.379000e+10           525969.0          480946.0\n","3.379000e+10              664.0         2513433.0\n","3.197021e+12           678492.0          842279.0\n","3.370000e+14           328919.0         2989663.0\n","8.823971e+14           812549.0         2518425.0\n","\n","[106856 rows x 2 columns]"]},"metadata":{"tags":[]},"execution_count":42}]},{"cell_type":"markdown","metadata":{"id":"lh1hxEVlZLfj","colab_type":"text"},"source":["##Total data volume (in Bytes) for Email"]},{"cell_type":"code","metadata":{"id":"QC4w6EMfq0q4","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":239},"executionInfo":{"status":"ok","timestamp":1596313378214,"user_tz":-180,"elapsed":1290,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"00358c8b-5adf-41f5-d356-dde3b96206a3"},"source":["\n","TDE= da['Total_Email_data_volume'] = da['Email UL (Bytes)'] + da['Email DL (Bytes)']\n","TDE"],"execution_count":43,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0         3.701304e+06\n","1         9.373850e+05\n","2         3.363124e+06\n","3         2.070983e+06\n","4         2.110349e+06\n","              ...     \n","149996    6.908760e+05\n","149997    2.121718e+06\n","149998    2.058277e+06\n","149999    2.850914e+06\n","150000    2.259102e+06\n","Length: 150001, dtype: float64"]},"metadata":{"tags":[]},"execution_count":43}]},{"cell_type":"code","metadata":{"id":"jQDL9V-aUITr","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":182},"executionInfo":{"status":"ok","timestamp":1596122489975,"user_tz":-180,"elapsed":1162,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"a0a08a65-89c9-48da-cce3-3acb09043535"},"source":["TDE.describe()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["count    1.500010e+05\n","mean     2.259102e+06\n","std      1.071109e+06\n","min      8.359000e+03\n","25%      1.359344e+06\n","50%      2.263567e+06\n","75%      3.159818e+06\n","max      4.518036e+06\n","dtype: float64"]},"metadata":{"tags":[]},"execution_count":53}]},{"cell_type":"code","metadata":{"id":"h0UW6_DHUBPx","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":302},"executionInfo":{"status":"ok","timestamp":1596122499521,"user_tz":-180,"elapsed":1241,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"02fd7d55-2794-4f56-98ec-c66d1815c67c"},"source":["TDE.hist()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f9f84f437f0>"]},"metadata":{"tags":[]},"execution_count":54},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"markdown","metadata":{"id":"-DI7aZoaZc9k","colab_type":"text"},"source":["##Total data volume (in Bytes) for Socal media"]},{"cell_type":"code","metadata":{"id":"JEILT-Scseud","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":239},"executionInfo":{"status":"ok","timestamp":1596313388627,"user_tz":-180,"elapsed":1568,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"8a92938c-ef66-47cc-f62c-4fdbf92aecf5"},"source":["TDS = da['Total_SocialMedia_data_volume']= da['Social Media DL (Bytes)'] + da['Social Media UL (Bytes)']\n","TDS \t"],"execution_count":44,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0         1.570185e+06\n","1         1.933278e+06\n","2         1.726277e+06\n","3         6.574930e+05\n","4         9.127880e+05\n","              ...     \n","149996    3.517065e+06\n","149997    2.352181e+06\n","149998    1.260239e+06\n","149999    8.231090e+05\n","150000    1.828250e+06\n","Length: 150001, dtype: float64"]},"metadata":{"tags":[]},"execution_count":44}]},{"cell_type":"code","metadata":{"id":"EvzVFc88sts8","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":182},"executionInfo":{"status":"ok","timestamp":1595955253131,"user_tz":-180,"elapsed":1831,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"c6b7233e-ce26-4c10-8e41-dd9eec2bb96c"},"source":["TDS.describe()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["count    1.500010e+05\n","mean     1.828250e+06\n","std      1.035646e+06\n","min      1.563000e+03\n","25%      9.322180e+05\n","50%      1.826471e+06\n","75%      2.727487e+06\n","max      3.650861e+06\n","dtype: float64"]},"metadata":{"tags":[]},"execution_count":163}]},{"cell_type":"code","metadata":{"id":"AQVxl5YmWMEa","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":299},"executionInfo":{"status":"ok","timestamp":1595955283056,"user_tz":-180,"elapsed":1668,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"880ed774-a5f4-4e07-b64a-9e99f8f94489"},"source":["TDS.hist()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f489b6b8f28>"]},"metadata":{"tags":[]},"execution_count":164},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"markdown","metadata":{"id":"ZG5XC1rNZqm-","colab_type":"text"},"source":["##Total data volume (in Bytes) for Google"]},{"cell_type":"code","metadata":{"id":"ixvs5NjZvxVy","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":239},"executionInfo":{"status":"ok","timestamp":1596313399436,"user_tz":-180,"elapsed":1263,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"f88ac373-e19d-49fc-df2c-08ee382a926a"},"source":["TDG = da['Total_Google_data_volume']= da['Google DL (Bytes)'] + da['Google UL (Bytes)']\n","TDG\t"],"execution_count":45,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0         2.905912e+06\n","1         4.414096e+06\n","2         1.022912e+07\n","3         1.181176e+07\n","4         7.748843e+06\n","              ...     \n","149996    1.278491e+07\n","149997    4.415361e+06\n","149998    6.585469e+06\n","149999    7.757267e+06\n","150000    7.807295e+06\n","Length: 150001, dtype: float64"]},"metadata":{"tags":[]},"execution_count":45}]},{"cell_type":"code","metadata":{"id":"beLhu9nkWYtA","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":182},"executionInfo":{"status":"ok","timestamp":1595955329722,"user_tz":-180,"elapsed":1299,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"04a2e6f0-0f24-4970-abd2-ef5b66ff240f"},"source":["TDG.describe()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["count    1.500010e+05\n","mean     4.303331e+08\n","std      2.440199e+08\n","min      3.063580e+05\n","25%      2.187279e+08\n","50%      4.316150e+08\n","75%      6.414159e+08\n","max      8.592028e+08\n","dtype: float64"]},"metadata":{"tags":[]},"execution_count":165}]},{"cell_type":"code","metadata":{"id":"QKY3iHKvWcu0","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":300},"executionInfo":{"status":"ok","timestamp":1595955342955,"user_tz":-180,"elapsed":1281,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"7fad51af-30ed-49b3-ae4c-b89366156a0b"},"source":["TDG.hist()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f48a60b0278>"]},"metadata":{"tags":[]},"execution_count":166},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"markdown","metadata":{"id":"5k-Du6sZZ4Ev","colab_type":"text"},"source":["##Total data volume (in Bytes) for YouTube"]},{"cell_type":"code","metadata":{"id":"QVFECx_pRsr9","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":183},"executionInfo":{"status":"ok","timestamp":1596313410661,"user_tz":-180,"elapsed":1280,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"63d4359f-5b0a-4d22-8f00-596957774a2d"},"source":["TDY= da['Total_Youtube_data_volume'] = da['Youtube DL (Bytes)'] + da['Youtube UL (Bytes)']\n","TDY.describe()\n"],"execution_count":46,"outputs":[{"output_type":"execute_result","data":{"text/plain":["count    1.500010e+05\n","mean     2.264348e+07\n","std      9.246800e+06\n","min      7.890300e+04\n","25%      1.599846e+07\n","50%      2.266177e+07\n","75%      2.929260e+07\n","max      4.519008e+07\n","dtype: float64"]},"metadata":{"tags":[]},"execution_count":46}]},{"cell_type":"code","metadata":{"id":"1ILBoc1iWmhL","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":182},"executionInfo":{"status":"ok","timestamp":1595955387775,"user_tz":-180,"elapsed":1362,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"e10af398-f48b-4b50-dadd-d8ed33c3ad3b"},"source":["TDY.describe()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["count    1.396000e+03\n","mean     2.423650e+09\n","std      1.809079e+10\n","min      8.773120e+05\n","25%      2.452676e+07\n","50%      5.194677e+07\n","75%      1.788070e+08\n","max      4.480679e+11\n","dtype: float64"]},"metadata":{"tags":[]},"execution_count":167}]},{"cell_type":"code","metadata":{"id":"PAUJek6SWr4j","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":299},"executionInfo":{"status":"ok","timestamp":1595955407720,"user_tz":-180,"elapsed":1417,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"95b0be12-e390-4ec3-8aac-e9d589c6b917"},"source":["TDY.hist()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f489b5477b8>"]},"metadata":{"tags":[]},"execution_count":168},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"markdown","metadata":{"id":"cjANIQzbZ_65","colab_type":"text"},"source":["##Total data volume (in Bytes) for Netflix"]},{"cell_type":"code","metadata":{"id":"QzW0yV8BSnAN","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":239},"executionInfo":{"status":"ok","timestamp":1596313422863,"user_tz":-180,"elapsed":1263,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"471b5fee-a9a8-4e01-aa22-a79d6e61988e"},"source":["TDN= da['Total_Netflix_data_volume'] = da['Netflix DL (Bytes)'] + da['Netflix UL (Bytes)']\n","TDN"],"execution_count":47,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0         1.785519e+07\n","1         3.556554e+07\n","2         2.375120e+07\n","3         1.509259e+07\n","4         1.753980e+07\n","              ...     \n","149996    3.756186e+07\n","149997    4.064329e+07\n","149998    1.502970e+07\n","149999    1.649484e+07\n","150000    2.262861e+07\n","Length: 150001, dtype: float64"]},"metadata":{"tags":[]},"execution_count":47}]},{"cell_type":"code","metadata":{"id":"lpWEcJw2WyTO","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":182},"executionInfo":{"status":"ok","timestamp":1595961144024,"user_tz":-180,"elapsed":996160,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"7d180ac1-062a-431d-c6c8-bbd05a85aee0"},"source":["TDN.describe()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["count    1.396000e+03\n","mean     2.422031e+09\n","std      1.803378e+10\n","min      1.354141e+06\n","25%      2.423216e+07\n","50%      5.070819e+07\n","75%      1.816914e+08\n","max      4.457561e+11\n","dtype: float64"]},"metadata":{"tags":[]},"execution_count":177}]},{"cell_type":"code","metadata":{"id":"KTkxITzLXBVa","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":299},"executionInfo":{"status":"ok","timestamp":1595955494876,"user_tz":-180,"elapsed":1423,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"4258819d-064b-48a9-9c28-5257379d1486"},"source":["TDN.hist()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f489b4c1860>"]},"metadata":{"tags":[]},"execution_count":170},{"output_type":"display_data","data":{"image/png":"iVBORw0KGgoAAAANSUhEUgAAAYIAAAEICAYAAABS0fM3AAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAU4UlEQVR4nO3dX2xT9/nH8Y/tiFBKUmPPAZNEQ1QjysY0ViyhSZU2OdLMReJyUSmRxS4a/mhCaHRqGaj7LY6AbXKSIpBIFaqhXUwRSL0pS5BwJmW7oNIqmEiRSbVUGURMMQmxk/FHJbSxfxfTvFnBJomNT8L3/bqqz+Ovz5PHRJ9zjuNTWzqdTgsAYCy71Q0AAKxFEACA4QgCADAcQQAAhiMIAMBwBAEAGI4gAADDlVndwFJNTz9SKrX4r0C43WuVSDx8Dh2tTMwjG/OYj5lkW6nzsNttWrfu5afWVmwQpFLpJQXBf9biv5hHNuYxHzPJ9qLNY0GXhiKRiPx+v+rq6jQyMjKvfubMmXm1oaEhBYNBBQIBtba2KpFILKgGACitBQVBQ0ODent7VV1dPa928+ZNDQ0NZdVSqZQOHz6strY2RaNR+Xw+dXV1PbMGACi9BQWBz+eT1+udt/3Jkyc6duyY2tvbs7bHYjGVl5fL5/NJklpaWnT58uVn1gAApVfQXw2dPn1awWBQNTU1Wdvj8bg2btyYeexyuZRKpTQzM5O3BgAovSV/WHz9+nXFYjG9++67xexnwdzutUte6/FUFLGTlY95ZGMe8zGTbC/aPJYcBFevXtXo6KgaGhokSXfv3tWePXv029/+Vl6vV+Pj45nnJpNJ2e12OZ3OvLXFSCQeLumTe4+nQvfuPVj0uhcV88jGPOZjJtlW6jzsdlvOA+glB8H+/fu1f//+zGO/36+enh5t2bJFqVRKjx8/1rVr1+Tz+XThwgXt3LlTkrR169acNQBA6S0oCE6cOKGBgQFNTU3prbfektPp1KVLl3I+3263q6OjQ+FwWLOzs6qurlZnZ+cza6Xw5Ks5S07rHs9+rQf3vyz5fgHgWWwr9f9QVsiloaZ3Lj6HjvLre/+NZXk6uVJPc58X5jEfM8m2UueR79IQ9xoCAMMRBABgOIIAAAxHEACA4QgCADAcQQAAhiMIAMBwBAEAGI4gAADDEQQAYDiCAAAMRxAAgOEIAgAwHEEAAIYjCADAcAQBABiOIAAAwxEEAGA4ggAADEcQAIDhCAIAMNyCgiASicjv96uurk4jIyOSpOnpae3bt0+BQEBNTU06ePCgkslkZs3Q0JCCwaACgYBaW1uVSCQWVAMAlNaCgqChoUG9vb2qrq7ObLPZbNq7d6+i0aj6+vpUW1urrq4uSVIqldLhw4fV1tamaDQqn8+3oBoAoPQWFAQ+n09erzdrm9Pp1I4dOzKPt23bpvHxcUlSLBZTeXm5fD6fJKmlpUWXL19+Zg0AUHpF+YwglUrp/Pnz8vv9kqR4PK6NGzdm6i6XS6lUSjMzM3lrAIDSKyvGixw/flxr1qzR7t27i/FyC+J2ry3ZvorF46mwuoWnWq59WYV5zMdMsr1o8yg4CCKRiMbGxtTT0yO7/d8nGF6vN3OZSJKSyaTsdrucTmfe2mIkEg+VSqUX3a+Vb+C9ew8s23cuHk/FsuzLKsxjPmaSbaXOw2635TyALujS0MmTJxWLxdTd3a1Vq1Zltm/dulWPHz/WtWvXJEkXLlzQzp07n1kDAJTegs4ITpw4oYGBAU1NTemtt96S0+nUqVOndPbsWW3atEktLS2SpJqaGnV3d8tut6ujo0PhcFizs7Oqrq5WZ2enJOWtAQBKz5ZOpxd/fWUZKOTSUNM7F59DR/n1vf/GsjydXKmnuc8L85iPmWRbqfN4bpeGAAArH0EAAIYjCADAcAQBABiOIAAAwxEEAGA4ggAADEcQAIDhCAIAMBxBAACGIwgAwHAEAQAYjiAAAMMRBABgOIIAAAxHEACA4QgCADAcQQAAhiMIAMBwBAEAGI4gAADDPTMIIpGI/H6/6urqNDIyktl+69YtNTc3KxAIqLm5Wbdv3y64BgAovWcGQUNDg3p7e1VdXZ21PRwOKxQKKRqNKhQKqa2treAaAKD0nhkEPp9PXq83a1sikdDw8LAaGxslSY2NjRoeHlYymVxyDQBgjbKlLIrH41q/fr0cDockyeFwqKqqSvF4XOl0ekk1l8tVpB8JALAYSwqC5cDtXmt1C4vm8VRY3cJTLde+rMI85mMm2V60eSwpCLxeryYmJjQ3NyeHw6G5uTlNTk7K6/UqnU4vqbZYicRDpVLpRa+z8g28d++BZfvOxeOpWJZ9WYV5zMdMsq3UedjttpwH0Ev681G32636+nr19/dLkvr7+1VfXy+Xy7XkGgDAGrZ0Op33sPrEiRMaGBjQ1NSU1q1bJ6fTqUuXLml0dFRHjx7V/fv3VVlZqUgkos2bN0vSkmuLUcgZQdM7Fxe9rlB977+xLI8iVurRzfPCPOZjJtlW6jzynRE8MwiWK4KgOFbqP+rnhXnMx0yyrdR5FP3SEADgxUEQAIDhCAIAMBxBAACGIwgAwHAEAQAYjiAAAMMRBABgOIIAAAxHEACA4QgCADAcQQAAhiMIAMBwBAEAGI4gAADDEQQAYDiCAAAMRxAAgOEIAgAwHEEAAIYjCADAcAUHwZ///Gft2rVLb7zxhoLBoAYGBiRJt27dUnNzswKBgJqbm3X79u3Mmnw1AEBpFRQE6XRav/jFL9TR0aGLFy+qo6NDR44cUSqVUjgcVigUUjQaVSgUUltbW2ZdvhoAoLQKPiOw2+168OCBJOnBgweqqqrS9PS0hoeH1djYKElqbGzU8PCwksmkEolEzhoAoPTKCllss9l06tQpHThwQGvWrNGjR4/04YcfKh6Pa/369XI4HJIkh8OhqqoqxeNxpdPpnDWXy1X4TwQAWJSCguDrr7/W2bNn9cEHH2j79u3629/+prffflsdHR3F6i8nt3vtc99HsXk8FVa38FTLtS+rMI/5mEm2F20eBQXB559/rsnJSW3fvl2StH37dr300ksqLy/XxMSE5ubm5HA4NDc3p8nJSXm9XqXT6Zy1xUgkHiqVSi+6ZyvfwHv3Hli271w8nopl2ZdVmMd8zCTbSp2H3W7LeQBd0GcEGzZs0N27d/WPf/xDkjQ6OqpEIqFvfvObqq+vV39/vySpv79f9fX1crlccrvdOWsAgNIr6IzA4/Govb1dhw4dks1mkyT95je/kdPpVHt7u44ePaoPPvhAlZWVikQimXX5agCA0iooCCQpGAwqGAzO2/7qq6/qo48+euqafDUAQGnxzWIAMBxBAACGIwgAwHAEAQAYjiAAAMMRBABgOIIAAAxHEACA4QgCADAcQQAAhiMIAMBwBAEAGI4gAADDEQQAYDiCAAAMRxAAgOEIAgAwHEEAAIYjCADAcAQBABiOIAAAwxUcBLOzswqHw/rxj3+spqYm/epXv5Ik3bp1S83NzQoEAmpubtbt27cza/LVAAClVXAQdHZ2qry8XNFoVH19fTp06JAkKRwOKxQKKRqNKhQKqa2tLbMmXw0AUFoFBcGjR4/08ccf69ChQ7LZbJKkb3zjG0okEhoeHlZjY6MkqbGxUcPDw0omk3lrAIDSKytk8Z07d+R0OnXmzBl9+umnevnll3Xo0CGtXr1a69evl8PhkCQ5HA5VVVUpHo8rnU7nrLlcrsJ/IgDAohQUBHNzc7pz546+/e1v68iRI/rss8/005/+VKdPny5Wfzm53Wuf+z6KzeOpsLqFp1qufVmFeczHTLK9aPMoKAi8Xq/Kysoyl3m+973vad26dVq9erUmJiY0Nzcnh8Ohubk5TU5Oyuv1Kp1O56wtRiLxUKlUetE9W/kG3rv3wLJ95+LxVCzLvqzCPOZjJtlW6jzsdlvOA+iCPiNwuVzasWOHPvnkE0n//mugRCKhTZs2qb6+Xv39/ZKk/v5+1dfXy+Vyye1256wBAErPlk6nF39Y/T/u3Lmj9957TzMzMyorK9Pbb7+tH/7whxodHdXRo0d1//59VVZWKhKJaPPmzZKUt7ZQhZwRNL1zcdHrCtX3/hvL8ihipR7dPC/MYz5mkm2lziPfGUFBl4Ykqba2Vn/4wx/mbX/11Vf10UcfPXVNvhoAoLT4ZjEAGI4gAADDEQQAYDiCAAAMRxAAgOEIAgAwHEEAAIYjCADAcAQBABiOIAAAwxEEAGA4ggAADEcQAIDhCAIAMBxBAACGIwgAwHAEAQAYjiAAAMMRBABgOIIAAAxHEACA4YoWBGfOnFFdXZ1GRkYkSUNDQwoGgwoEAmptbVUikcg8N18NAFBaRQmCmzdvamhoSNXV1ZKkVCqlw4cPq62tTdFoVD6fT11dXc+sAQBKr+AgePLkiY4dO6b29vbMtlgspvLycvl8PklSS0uLLl++/MwaAKD0Cg6C06dPKxgMqqamJrMtHo9r48aNmccul0upVEozMzN5awCA0isrZPH169cVi8X07rvvFqufBXO715Z8n4XyeCqsbuGplmtfVmEe8zGTbC/aPAoKgqtXr2p0dFQNDQ2SpLt372rPnj36yU9+ovHx8czzksmk7Ha7nE6nvF5vztpiJBIPlUqlF92zlW/gvXsPLNt3Lh5PxbLsyyrMYz5mkm2lzsNut+U8gC7o0tD+/ft15coVDQ4OanBwUBs2bNC5c+e0d+9ePX78WNeuXZMkXbhwQTt37pQkbd26NWcNAFB6BZ0R5GK329XR0aFwOKzZ2VlVV1ers7PzmTUAQOkVNQgGBwcz//3aa6+pr6/vqc/LVwMAlBbfLAYAwxEEAGA4ggAADEcQAIDhCAIAMBxBAACGIwgAwHAEAQAYjiAAAMMRBABgOIIAAAxHEACA4QgCADAcQQAAhiMIAMBwBAEAGI4gAADDEQQAYDiCAAAMRxAAgOEIAgAwHEEAAIYrKAimp6e1b98+BQIBNTU16eDBg0omk5KkoaEhBYNBBQIBtba2KpFIZNblqwEASqugILDZbNq7d6+i0aj6+vpUW1urrq4upVIpHT58WG1tbYpGo/L5fOrq6pKkvDUAQOkVFAROp1M7duzIPN62bZvGx8cVi8VUXl4un88nSWppadHly5clKW8NAFB6ZcV6oVQqpfPnz8vv9ysej2vjxo2ZmsvlUiqV0szMTN6a0+lc8P7c7rXFar1kPJ4Kq1t4quXal1WYx3zMJNuLNo+iBcHx48e1Zs0a7d69W3/605+K9bI5JRIPlUqlF73Oyjfw3r0Hlu07F4+nYln2ZRXmMR8zybZS52G323IeQBclCCKRiMbGxtTT0yO73S6v16vx8fFMPZlMym63y+l05q0BAEqv4D8fPXnypGKxmLq7u7Vq1SpJ0tatW/X48WNdu3ZNknThwgXt3LnzmTUAQOkVdEbwxRdf6OzZs9q0aZNaWlokSTU1Neru7lZHR4fC4bBmZ2dVXV2tzs5OSZLdbs9ZAwCUXkFB8K1vfUt///vfn1p77bXX1NfXt+gaAKC0+GYxABiOIAAAwxEEAGA4ggAADEcQAIDhCAIAMBxBAACGIwgAwHAEAQAYjiAAAMMRBABgOIIAAAxHEACA4QgCADAcQQAAhiMIAMBwBAEAGI4gAADDEQQAYDiCAAAMRxAAgOEsC4Jbt26publZgUBAzc3Nun37tlWtAIDRLAuCcDisUCikaDSqUCiktrY2q1oBAKOVWbHTRCKh4eFh/f73v5ckNTY26vjx40omk3K5XAt6DbvdtuT9V617aclrl+rJV3PyeCpKvl9Jmp39Wg8fPs5ZL2SWLyLmMR8zybYS55GvZ0uCIB6Pa/369XI4HJIkh8OhqqoqxePxBQfBunUvL3n/5/7vx0teuxKVl5epvHxtzrrbnbtmIuYxHzPJ9qLNgw+LAcBwlgSB1+vVxMSE5ubmJElzc3OanJyU1+u1oh0AMJolQeB2u1VfX6/+/n5JUn9/v+rr6xd8WQgAUDy2dDqdtmLHo6OjOnr0qO7fv6/KykpFIhFt3rzZilYAwGiWBQEAYHngw2IAMBxBAACGIwgAwHAEAQAYzpgg4CZ32SKRiPx+v+rq6jQyMmJ1O5abnp7Wvn37FAgE1NTUpIMHDyqZTFrdlqUOHDigYDCoXbt2KRQK6fPPP7e6pWXhzJkzL9zvjTFBwE3usjU0NKi3t1fV1dVWt7Is2Gw27d27V9FoVH19faqtrVVXV5fVbVkqEonoj3/8oz7++GO1trbqvffes7oly928eVNDQ0Mv3O+NEUHwn5vcNTY2Svr3Te6Gh4eNPuLz+Xx8k/t/OJ1O7dixI/N427ZtGh8ft7Aj61VU/PcmiQ8fPpTNtvJutFZMT5480bFjx9Te3m51K0VnyU3nSq0YN7mDOVKplM6fPy+/3291K5b75S9/qU8++UTpdFq/+93vrG7HUqdPn1YwGFRNTY3VrRSdEWcEwGIcP35ca9as0e7du61uxXK//vWv9Ze//EU///nP1dHRYXU7lrl+/bpisZhCoZDVrTwXRgQBN7nDQkUiEY2NjenUqVOy24349ViQXbt26dNPP9X09LTVrVji6tWrGh0dVUNDg/x+v+7evas9e/boypUrVrdWFEb8S+cmd1iIkydPKhaLqbu7W6tWrbK6HUs9evRI8Xg883hwcFCvvPKKnE6nhV1ZZ//+/bpy5YoGBwc1ODioDRs26Ny5c3r99detbq0ojLnXEDe5y3bixAkNDAxoampK69atk9Pp1KVLl6xuyzJffPGFGhsbtWnTJq1evVqSVFNTo+7ubos7s8bU1JQOHDigL7/8Una7Xa+88oqOHDmi73znO1a3tiz4/X719PRoy5YtVrdSFMYEAQDg6Yy4NAQAyI0gAADDEQQAYDiCAAAMRxAAgIWWcgPId955R6+//rrq6ur06NGjBddyIQgAwEJLuQHkm2++qYsXLy66losR9xoCgOXK5/M9dftnn32mrq6uzFH9z372M/3oRz+SJP3gBz/I+Xr5arkQBACwzNy/f1/hcFgffvihqqqqNDk5qTfffFP9/f2qrKws+v4IAgBYZq5fv65//vOf2rdvX2abzWbT2NiYvvvd7xZ9fwQBACwz6XRadXV16u3tLcn++LAYAJaZ73//+xobG9Nf//rXzLYbN27oed0RiHsNAYCFct0A8saNG+rs7NS//vUvffXVV6qtrVVPT4/sdrsOHjyoGzduaGJiQlVVVdqyZYvOnTsnSXlruRAEAGA4Lg0BgOEIAgAwHEEAAIYjCADAcAQBABiOIAAAwxEEAGA4ggAADPf/D2QkTQ9pOIEAAAAASUVORK5CYII=\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"aUSBewwdS40W","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":237},"executionInfo":{"status":"ok","timestamp":1596274964023,"user_tz":-180,"elapsed":1152,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"c0852962-0793-4ab8-8ab1-af1a0b8daf0a"},"source":["TDG= da['Total_Gaming_data_volume'] = da['Gaming DL (Bytes)'] + da['Gaming UL (Bytes)']\n","TDG"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0         2.924265e+08\n","1         6.099208e+08\n","2         2.299803e+08\n","3         8.103879e+08\n","4         5.312370e+08\n","              ...     \n","149996    5.358069e+08\n","149997    6.316281e+08\n","149998    5.669338e+08\n","149999    3.550664e+08\n","150000    4.303331e+08\n","Length: 150001, dtype: float64"]},"metadata":{"tags":[]},"execution_count":29}]},{"cell_type":"code","metadata":{"id":"pgsYdfOIRrkB","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":182},"executionInfo":{"status":"ok","timestamp":1595955525042,"user_tz":-180,"elapsed":1435,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"f82f670d-b8fd-46be-f0b7-6d9a3d9e1dbc"},"source":["TDG.describe()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["count    1.500010e+05\n","mean     4.303331e+08\n","std      2.440199e+08\n","min      3.063580e+05\n","25%      2.187279e+08\n","50%      4.316150e+08\n","75%      6.414159e+08\n","max      8.592028e+08\n","dtype: float64"]},"metadata":{"tags":[]},"execution_count":172}]},{"cell_type":"code","metadata":{"id":"NWjvbM21XIoo","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":300},"executionInfo":{"status":"ok","timestamp":1595955544513,"user_tz":-180,"elapsed":1347,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"ad87a379-b478-4ebd-e156-39a53b67bbc7"},"source":["TDG.hist()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f489b434470>"]},"metadata":{"tags":[]},"execution_count":173},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"markdown","metadata":{"id":"2jN4-Ec4Dcfa","colab_type":"text"},"source":["#Task 2"]},{"cell_type":"markdown","metadata":{"id":"BXuPRCO5DpNo","colab_type":"text"},"source":["##The top 10 customers per engagement metric"]},{"cell_type":"code","metadata":{"id":"L_YZGqszsxMS","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":395},"executionInfo":{"status":"ok","timestamp":1596313434504,"user_tz":-180,"elapsed":1263,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"ec56914d-0253-4053-eeef-b8b2a3dcd1ff"},"source":["grouped = da.groupby('MSISDN/Number')\n","sessions_frequency = grouped.agg({\"Bearer Id\": \"count\"})\n","Top = sessions_frequency.sort_values(by='Bearer Id', ascending=False)\n","Top.head(10)"],"execution_count":48,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Bearer Id</th>\n","    </tr>\n","    <tr>\n","      <th>MSISDN/Number</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>3.362632e+10</th>\n","      <td>18</td>\n","    </tr>\n","    <tr>\n","      <th>3.362578e+10</th>\n","      <td>17</td>\n","    </tr>\n","    <tr>\n","      <th>3.361489e+10</th>\n","      <td>17</td>\n","    </tr>\n","    <tr>\n","      <th>3.365973e+10</th>\n","      <td>16</td>\n","    </tr>\n","    <tr>\n","      <th>3.376054e+10</th>\n","      <td>15</td>\n","    </tr>\n","    <tr>\n","      <th>3.367588e+10</th>\n","      <td>15</td>\n","    </tr>\n","    <tr>\n","      <th>3.366716e+10</th>\n","      <td>13</td>\n","    </tr>\n","    <tr>\n","      <th>3.362708e+10</th>\n","      <td>12</td>\n","    </tr>\n","    <tr>\n","      <th>3.360452e+10</th>\n","      <td>12</td>\n","    </tr>\n","    <tr>\n","      <th>3.376041e+10</th>\n","      <td>12</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["               Bearer Id\n","MSISDN/Number           \n","3.362632e+10          18\n","3.362578e+10          17\n","3.361489e+10          17\n","3.365973e+10          16\n","3.376054e+10          15\n","3.367588e+10          15\n","3.366716e+10          13\n","3.362708e+10          12\n","3.360452e+10          12\n","3.376041e+10          12"]},"metadata":{"tags":[]},"execution_count":48}]},{"cell_type":"code","metadata":{"id":"e0wjGgDiKcAN","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":395},"executionInfo":{"status":"ok","timestamp":1596313442369,"user_tz":-180,"elapsed":1203,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"8ca53349-3cd6-4c20-acd2-1a3b228c68e1"},"source":["grouped_data= da.groupby('MSISDN/Number')\n","duration_of_sessions = grouped_data.agg({\"Dur. (ms)\": \"sum\"})\n","Top = duration_of_sessions.sort_values(by='Dur. (ms)', ascending=False)\n","Top.head(10)"],"execution_count":49,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Dur. (ms)</th>\n","    </tr>\n","    <tr>\n","      <th>MSISDN/Number</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>3.362578e+10</th>\n","      <td>3.835308e+06</td>\n","    </tr>\n","    <tr>\n","      <th>3.362632e+10</th>\n","      <td>3.742143e+06</td>\n","    </tr>\n","    <tr>\n","      <th>3.361489e+10</th>\n","      <td>3.635121e+06</td>\n","    </tr>\n","    <tr>\n","      <th>3.365973e+10</th>\n","      <td>3.294368e+06</td>\n","    </tr>\n","    <tr>\n","      <th>3.376054e+10</th>\n","      <td>3.188510e+06</td>\n","    </tr>\n","    <tr>\n","      <th>3.367588e+10</th>\n","      <td>3.142791e+06</td>\n","    </tr>\n","    <tr>\n","      <th>3.366716e+10</th>\n","      <td>2.886895e+06</td>\n","    </tr>\n","    <tr>\n","      <th>3.360313e+10</th>\n","      <td>2.647162e+06</td>\n","    </tr>\n","    <tr>\n","      <th>3.362708e+10</th>\n","      <td>2.593000e+06</td>\n","    </tr>\n","    <tr>\n","      <th>3.360452e+10</th>\n","      <td>2.590693e+06</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                  Dur. (ms)\n","MSISDN/Number              \n","3.362578e+10   3.835308e+06\n","3.362632e+10   3.742143e+06\n","3.361489e+10   3.635121e+06\n","3.365973e+10   3.294368e+06\n","3.376054e+10   3.188510e+06\n","3.367588e+10   3.142791e+06\n","3.366716e+10   2.886895e+06\n","3.360313e+10   2.647162e+06\n","3.362708e+10   2.593000e+06\n","3.360452e+10   2.590693e+06"]},"metadata":{"tags":[]},"execution_count":49}]},{"cell_type":"code","metadata":{"id":"lni2tukQNFRc","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":395},"executionInfo":{"status":"ok","timestamp":1596313445060,"user_tz":-180,"elapsed":1177,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"d363d7e3-2711-4dc2-e4ee-1c5d06e2cd8b"},"source":["grouped_data= da.groupby('MSISDN/Number')\n","total_traffic = grouped_data.agg({\"Total_data\": \"sum\"})\n","Top = total_traffic.sort_values(by='Total_data', ascending=False)\n","Top.head(10)"],"execution_count":50,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Total_data</th>\n","    </tr>\n","    <tr>\n","      <th>MSISDN/Number</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>3.361489e+10</th>\n","      <td>8.853590e+09</td>\n","    </tr>\n","    <tr>\n","      <th>3.376054e+10</th>\n","      <td>8.511960e+09</td>\n","    </tr>\n","    <tr>\n","      <th>3.362578e+10</th>\n","      <td>8.494899e+09</td>\n","    </tr>\n","    <tr>\n","      <th>3.362632e+10</th>\n","      <td>7.972765e+09</td>\n","    </tr>\n","    <tr>\n","      <th>3.367588e+10</th>\n","      <td>7.889370e+09</td>\n","    </tr>\n","    <tr>\n","      <th>3.365973e+10</th>\n","      <td>7.696169e+09</td>\n","    </tr>\n","    <tr>\n","      <th>3.366646e+10</th>\n","      <td>7.309989e+09</td>\n","    </tr>\n","    <tr>\n","      <th>3.376041e+10</th>\n","      <td>7.129728e+09</td>\n","    </tr>\n","    <tr>\n","      <th>3.366471e+10</th>\n","      <td>6.884148e+09</td>\n","    </tr>\n","    <tr>\n","      <th>3.369879e+10</th>\n","      <td>6.525862e+09</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                 Total_data\n","MSISDN/Number              \n","3.361489e+10   8.853590e+09\n","3.376054e+10   8.511960e+09\n","3.362578e+10   8.494899e+09\n","3.362632e+10   7.972765e+09\n","3.367588e+10   7.889370e+09\n","3.365973e+10   7.696169e+09\n","3.366646e+10   7.309989e+09\n","3.376041e+10   7.129728e+09\n","3.366471e+10   6.884148e+09\n","3.369879e+10   6.525862e+09"]},"metadata":{"tags":[]},"execution_count":50}]},{"cell_type":"code","metadata":{"id":"LiPtDdyKM2Ya","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":294},"executionInfo":{"status":"ok","timestamp":1596313447525,"user_tz":-180,"elapsed":1390,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"02610f9a-8247-4df3-d4dd-4d7f2f4b8644"},"source":["joined_df =pd.DataFrame(sessions_frequency.join(duration_of_sessions, how='left')).join(total_traffic, how='left')\n","print(joined_df)"],"execution_count":51,"outputs":[{"output_type":"stream","text":["               Bearer Id      Dur. (ms)    Total_data\n","MSISDN/Number                                        \n","3.360100e+10           1  116720.000000  8.786906e+08\n","3.360100e+10           1  181230.000000  1.568596e+08\n","3.360100e+10           1  134969.000000  5.959665e+08\n","3.360101e+10           1   49878.000000  4.261998e+08\n","3.360101e+10           2   37104.000000  1.457411e+09\n","...                  ...            ...           ...\n","3.379000e+10           1    8810.000000  7.146416e+08\n","3.379000e+10           1  140988.000000  4.803073e+08\n","3.197021e+12           1  226164.992565  2.321240e+08\n","3.370000e+14           1  226164.992565  5.962878e+08\n","8.823971e+14           1  226164.992565  1.367334e+08\n","\n","[106856 rows x 3 columns]\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"gzVsjUBxofgH","colab_type":"text"},"source":["##Before nornalization"]},{"cell_type":"code","metadata":{"id":"zfapiTK6oqXM","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":300},"executionInfo":{"status":"ok","timestamp":1596211789286,"user_tz":-180,"elapsed":1146,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"5d2b48d8-a2c0-472a-ae49-6da314ed07ae"},"source":["joined_df.describe()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Bearer Id</th>\n","      <th>Dur. (ms)</th>\n","      <th>Total_data</th>\n","      <th>cluster</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>106856.000000</td>\n","      <td>1.068560e+05</td>\n","      <td>1.068560e+05</td>\n","      <td>106856.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>1.393792</td>\n","      <td>1.461672e+05</td>\n","      <td>6.909621e+08</td>\n","      <td>0.285946</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>0.806022</td>\n","      <td>1.863587e+05</td>\n","      <td>4.910559e+08</td>\n","      <td>0.520201</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.000000</td>\n","      <td>7.142000e+03</td>\n","      <td>3.324901e+07</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>1.000000</td>\n","      <td>7.130800e+04</td>\n","      <td>3.585499e+08</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>1.000000</td>\n","      <td>1.027400e+05</td>\n","      <td>6.179231e+08</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>2.000000</td>\n","      <td>1.727990e+05</td>\n","      <td>8.574351e+08</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>18.000000</td>\n","      <td>1.855375e+07</td>\n","      <td>8.846226e+09</td>\n","      <td>2.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["           Bearer Id     Dur. (ms)    Total_data        cluster\n","count  106856.000000  1.068560e+05  1.068560e+05  106856.000000\n","mean        1.393792  1.461672e+05  6.909621e+08       0.285946\n","std         0.806022  1.863587e+05  4.910559e+08       0.520201\n","min         1.000000  7.142000e+03  3.324901e+07       0.000000\n","25%         1.000000  7.130800e+04  3.585499e+08       0.000000\n","50%         1.000000  1.027400e+05  6.179231e+08       0.000000\n","75%         2.000000  1.727990e+05  8.574351e+08       1.000000\n","max        18.000000  1.855375e+07  8.846226e+09       2.000000"]},"metadata":{"tags":[]},"execution_count":95}]},{"cell_type":"markdown","metadata":{"id":"ua7abzPljn1B","colab_type":"text"},"source":["##Normalizing and standardazing for K means clustering"]},{"cell_type":"code","metadata":{"id":"Qv1maBDxPtO2","colab_type":"code","colab":{}},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"LBrMkWWIjqCE","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":294},"executionInfo":{"status":"ok","timestamp":1596314327067,"user_tz":-180,"elapsed":3370,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"810752f6-2017-4cd5-9c5f-deea1a45266e"},"source":["N_CLUSTERS = 3\n","\n","cols_to_standardize = ['Bearer Id',  'Dur. (ms)', 'Total_data']\n","data_to_standardize = joined_df[cols_to_standardize]\n","\n","# Create the scaler.\n","scaler = StandardScaler().fit(data_to_standardize)\n","\n","# Standardize the data\n","standardized_data = joined_df.copy()\n","standardized_columns = scaler.transform(data_to_standardize)\n","standardized_data[cols_to_standardize] = standardized_columns\n","\n","print('Sample of data to use:')\n","print(standardized_data.sample(5))\n","print('')\n","\n","model = KMeans(n_clusters=N_CLUSTERS).fit(standardized_data)\n","\n","joined_df['cluster'] = model.predict(standardized_data)\n","\n","print('Cluster summary:')\n","summary = joined_df.groupby(['cluster']).mean()\n","summary['count'] = joined_df['cluster'].value_counts()\n","summary = summary.sort_values(by='count', ascending=False)\n","print(summary)"],"execution_count":61,"outputs":[{"output_type":"stream","text":["Sample of data to use:\n","               Bearer Id  Dur. (ms)  Total_data  cluster\n","MSISDN/Number                                           \n","3.367358e+10   -0.488564  -0.864159   -1.194907        1\n","3.361719e+10    3.233436   1.234289    1.621564        2\n","3.360382e+10   -0.488564  -0.407384   -0.575457        1\n","3.366181e+10   -0.488564  -0.528137   -0.545820        1\n","3.366575e+10   -0.488564  -0.328324    0.079949        1\n","\n","Cluster summary:\n","         Bearer Id      Dur. (ms)    Total_data  count\n","cluster                                               \n","0         1.029260   99129.075314  4.968585e+08  80074\n","2         2.170326  204653.655285  1.106864e+09  22821\n","1         4.289068  532124.602090  2.218764e+09   3961\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"2-0O4LdwPD7w","colab_type":"code","colab":{}},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"9WNvMd9ba3Se","colab_type":"text"},"source":["## Per application"]},{"cell_type":"code","metadata":{"id":"UcMTlTLta53u","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":395},"executionInfo":{"status":"ok","timestamp":1596314336034,"user_tz":-180,"elapsed":2027,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"25b1d691-0982-41a5-8f11-eda31ba49118"},"source":["grouped_data= da.groupby('MSISDN/Number')\n","total_traffic = grouped_data.agg({\"Total_Email_data_volume\": \"sum\"})\n","Top = total_traffic.sort_values(by='Total_Email_data_volume', ascending=False)\n","Top.head(10)"],"execution_count":62,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Total_Email_data_volume</th>\n","    </tr>\n","    <tr>\n","      <th>MSISDN/Number</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>3.362632e+10</th>\n","      <td>42418782.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.361489e+10</th>\n","      <td>40788634.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.362578e+10</th>\n","      <td>40633966.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.378632e+10</th>\n","      <td>36310123.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.365973e+10</th>\n","      <td>35999792.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.376054e+10</th>\n","      <td>33693767.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.367588e+10</th>\n","      <td>31514421.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.366546e+10</th>\n","      <td>30417885.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.366716e+10</th>\n","      <td>30335796.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.369879e+10</th>\n","      <td>29059042.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["               Total_Email_data_volume\n","MSISDN/Number                         \n","3.362632e+10                42418782.0\n","3.361489e+10                40788634.0\n","3.362578e+10                40633966.0\n","3.378632e+10                36310123.0\n","3.365973e+10                35999792.0\n","3.376054e+10                33693767.0\n","3.367588e+10                31514421.0\n","3.366546e+10                30417885.0\n","3.366716e+10                30335796.0\n","3.369879e+10                29059042.0"]},"metadata":{"tags":[]},"execution_count":62}]},{"cell_type":"code","metadata":{"id":"qewBMLGrcwd5","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":395},"executionInfo":{"status":"ok","timestamp":1596314345174,"user_tz":-180,"elapsed":2713,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"245c6a56-5937-41b2-fd2d-a045d886325c"},"source":["grouped_data= da.groupby('MSISDN/Number')\n","total_traffic = grouped_data.agg({\"Total_SocialMedia_data_volume\": \"sum\"})\n","Top = total_traffic.sort_values(by='Total_SocialMedia_data_volume', ascending=False)\n","Top.head(10)"],"execution_count":63,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Total_SocialMedia_data_volume</th>\n","    </tr>\n","    <tr>\n","      <th>MSISDN/Number</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>3.362632e+10</th>\n","      <td>43374779.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.376054e+10</th>\n","      <td>39783189.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.365973e+10</th>\n","      <td>35412358.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.361489e+10</th>\n","      <td>28294544.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.362578e+10</th>\n","      <td>27135500.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.366716e+10</th>\n","      <td>24247850.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.378632e+10</th>\n","      <td>23974919.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.366907e+10</th>\n","      <td>23800834.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.360313e+10</th>\n","      <td>23077825.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.365849e+10</th>\n","      <td>23000066.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["               Total_SocialMedia_data_volume\n","MSISDN/Number                               \n","3.362632e+10                      43374779.0\n","3.376054e+10                      39783189.0\n","3.365973e+10                      35412358.0\n","3.361489e+10                      28294544.0\n","3.362578e+10                      27135500.0\n","3.366716e+10                      24247850.0\n","3.378632e+10                      23974919.0\n","3.366907e+10                      23800834.0\n","3.360313e+10                      23077825.0\n","3.365849e+10                      23000066.0"]},"metadata":{"tags":[]},"execution_count":63}]},{"cell_type":"code","metadata":{"id":"Q926oJTcbKz3","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":395},"executionInfo":{"status":"ok","timestamp":1596314348315,"user_tz":-180,"elapsed":1971,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"e9d220c3-6efa-448a-8629-a599c68a4240"},"source":["grouped_data= da.groupby('MSISDN/Number')\n","total_traffic = grouped_data.agg({\"Total_Google_data_volume\": \"sum\"})\n","Top = total_traffic.sort_values(by='Total_Google_data_volume', ascending=False)\n","Top.head(10)"],"execution_count":64,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Total_Google_data_volume</th>\n","    </tr>\n","    <tr>\n","      <th>MSISDN/Number</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>3.362632e+10</th>\n","      <td>152191852.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.362578e+10</th>\n","      <td>142307915.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.361489e+10</th>\n","      <td>127973787.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.376054e+10</th>\n","      <td>123223099.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.365973e+10</th>\n","      <td>116516345.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.378632e+10</th>\n","      <td>110254484.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.367588e+10</th>\n","      <td>109860502.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.366716e+10</th>\n","      <td>105032696.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.376127e+10</th>\n","      <td>97089988.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.369876e+10</th>\n","      <td>91935151.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["               Total_Google_data_volume\n","MSISDN/Number                          \n","3.362632e+10                152191852.0\n","3.362578e+10                142307915.0\n","3.361489e+10                127973787.0\n","3.376054e+10                123223099.0\n","3.365973e+10                116516345.0\n","3.378632e+10                110254484.0\n","3.367588e+10                109860502.0\n","3.366716e+10                105032696.0\n","3.376127e+10                 97089988.0\n","3.369876e+10                 91935151.0"]},"metadata":{"tags":[]},"execution_count":64}]},{"cell_type":"code","metadata":{"id":"_i_m7t9QdK40","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":395},"executionInfo":{"status":"ok","timestamp":1596314351459,"user_tz":-180,"elapsed":2277,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"bd62be75-f192-4acc-9fc4-ac78cabc1081"},"source":["grouped_data= da.groupby('MSISDN/Number')\n","total_traffic = grouped_data.agg({\"Total_Youtube_data_volume\": \"sum\"})\n","Top = total_traffic.sort_values(by='Total_Youtube_data_volume', ascending=False)\n","Top.head(10)"],"execution_count":65,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Total_Youtube_data_volume</th>\n","    </tr>\n","    <tr>\n","      <th>MSISDN/Number</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>3.362578e+10</th>\n","      <td>452958769.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.376054e+10</th>\n","      <td>396289198.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.361489e+10</th>\n","      <td>394370218.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.362632e+10</th>\n","      <td>374483047.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.367588e+10</th>\n","      <td>317410572.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.366716e+10</th>\n","      <td>315231310.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.362708e+10</th>\n","      <td>308790774.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.376041e+10</th>\n","      <td>303169107.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.369879e+10</th>\n","      <td>302661958.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.360313e+10</th>\n","      <td>284090139.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["               Total_Youtube_data_volume\n","MSISDN/Number                           \n","3.362578e+10                 452958769.0\n","3.376054e+10                 396289198.0\n","3.361489e+10                 394370218.0\n","3.362632e+10                 374483047.0\n","3.367588e+10                 317410572.0\n","3.366716e+10                 315231310.0\n","3.362708e+10                 308790774.0\n","3.376041e+10                 303169107.0\n","3.369879e+10                 302661958.0\n","3.360313e+10                 284090139.0"]},"metadata":{"tags":[]},"execution_count":65}]},{"cell_type":"code","metadata":{"id":"p5LY2tsZdYZ2","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":395},"executionInfo":{"status":"ok","timestamp":1596314355522,"user_tz":-180,"elapsed":1131,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"e790b630-ffac-44c0-c1b9-2a88d99983c3"},"source":["\n","grouped_data= da.groupby('MSISDN/Number')\n","total_traffic = grouped_data.agg({\"Total_Netflix_data_volume\": \"sum\"})\n","Top = total_traffic.sort_values(by='Total_Netflix_data_volume', ascending=False)\n","Top.head(10)"],"execution_count":66,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Total_Netflix_data_volume</th>\n","    </tr>\n","    <tr>\n","      <th>MSISDN/Number</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>3.365973e+10</th>\n","      <td>399519079.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.361489e+10</th>\n","      <td>361401046.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.362578e+10</th>\n","      <td>356980607.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.376054e+10</th>\n","      <td>334643269.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.362632e+10</th>\n","      <td>328725740.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.376041e+10</th>\n","      <td>318347546.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.366716e+10</th>\n","      <td>313939488.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.367588e+10</th>\n","      <td>309093159.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.378632e+10</th>\n","      <td>305939790.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.376127e+10</th>\n","      <td>292091341.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["               Total_Netflix_data_volume\n","MSISDN/Number                           \n","3.365973e+10                 399519079.0\n","3.361489e+10                 361401046.0\n","3.362578e+10                 356980607.0\n","3.376054e+10                 334643269.0\n","3.362632e+10                 328725740.0\n","3.376041e+10                 318347546.0\n","3.366716e+10                 313939488.0\n","3.367588e+10                 309093159.0\n","3.378632e+10                 305939790.0\n","3.376127e+10                 292091341.0"]},"metadata":{"tags":[]},"execution_count":66}]},{"cell_type":"markdown","metadata":{"id":"JpMwocMMpKe1","colab_type":"text"},"source":["##Top 3 most used application"]},{"cell_type":"code","metadata":{"id":"neqF91n6pds8","colab_type":"code","colab":{}},"source":["x= joined_df[''].value_counts().head(3)\n","x.hist()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"uAsIhBOskO6Z","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":301},"executionInfo":{"status":"ok","timestamp":1596313573119,"user_tz":-180,"elapsed":35180,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"2ca7df74-93d2-466e-b897-07d420bdafa6"},"source":["from sklearn.cluster import KMeans\n","wcss=[]\n","for i in range(1,11):\n","    kmeans=KMeans(n_clusters=i,init='k-means++',max_iter=300,n_init=10,random_state=0)\n","    kmeans.fit(standardized_data)\n","    wcss.append(kmeans.inertia_)\n","plt.plot(range(1,11),wcss)\n","plt.title('The elbow method')\n","plt.xlabel('Number of clusters')\n","plt.ylabel('wcss')\n","plt.show()"],"execution_count":58,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"markdown","metadata":{"id":"wX_jAj3affWR","colab_type":"text"},"source":["#Task 3 - Experience Analytics"]},{"cell_type":"markdown","metadata":{"id":"aeR3KN8Aq6R_","colab_type":"text"},"source":["##Average TCP retransmission"]},{"cell_type":"code","metadata":{"id":"KYXjKSFAeBhj","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1596315401596,"user_tz":-180,"elapsed":1115,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}}},"source":["TCP = da['Avg_TCP_retransmission'] = da['TCP DL Retrans. Vol (Bytes)'] + da['TCP DL Retrans. Vol (Bytes)']\n"],"execution_count":98,"outputs":[]},{"cell_type":"code","metadata":{"id":"PPlr6PsizYUG","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":455},"executionInfo":{"status":"ok","timestamp":1596315310723,"user_tz":-180,"elapsed":1101,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"f24a1453-85bb-4f5f-9f22-05cc33072074"},"source":[" TCP.fillna(TCP.mean())\n"],"execution_count":93,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Avg_TCP_retransmission</th>\n","    </tr>\n","    <tr>\n","      <th>MSISDN/Number</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>3.360100e+10</th>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.360100e+10</th>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.360100e+10</th>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.360101e+10</th>\n","      <td>2132.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.360101e+10</th>\n","      <td>18699260.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>3.379000e+10</th>\n","      <td>430088.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.379000e+10</th>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.197021e+12</th>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.370000e+14</th>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>8.823971e+14</th>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>106856 rows × 1 columns</p>\n","</div>"],"text/plain":["               Avg_TCP_retransmission\n","MSISDN/Number                        \n","3.360100e+10                      0.0\n","3.360100e+10                      0.0\n","3.360100e+10                      0.0\n","3.360101e+10                   2132.0\n","3.360101e+10               18699260.0\n","...                               ...\n","3.379000e+10                 430088.0\n","3.379000e+10                      0.0\n","3.197021e+12                      0.0\n","3.370000e+14                      0.0\n","8.823971e+14                      0.0\n","\n","[106856 rows x 1 columns]"]},"metadata":{"tags":[]},"execution_count":93}]},{"cell_type":"code","metadata":{"id":"KACC_gkKvJAd","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1596315321552,"user_tz":-180,"elapsed":1119,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"336903fe-ea3b-452c-de3b-c28d4ffa61e5"},"source":["# Upper and lower limits of duration\n","dur_upper_limit, dur_lower_limit = normal_boundaries(da, 'Avg_TCP_retransmission', 1.5)\n","dur_upper_limit, dur_lower_limit"],"execution_count":94,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(589319412.2849251, -506079755.2035574)"]},"metadata":{"tags":[]},"execution_count":94}]},{"cell_type":"code","metadata":{"id":"pN7GIZOExB9_","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1596315323793,"user_tz":-180,"elapsed":1206,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}}},"source":["# Replacing the outliers by the maximum and minimum limit\n","\n","da['Avg_TCP_retransmission']= np.where(da['Avg_TCP_retransmission'] > dur_upper_limit, dur_upper_limit,\n","                       np.where(da['Avg_TCP_retransmission'] < dur_lower_limit, dur_lower_limit, da['Avg_TCP_retransmission']))"],"execution_count":95,"outputs":[]},{"cell_type":"code","metadata":{"id":"6rgpDIdE11Wu","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":461},"executionInfo":{"status":"ok","timestamp":1596316220991,"user_tz":-180,"elapsed":1577,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"334627a5-907b-4e8e-83d9-8048b2b5e1a3"},"source":["grouped_data= da.groupby('MSISDN/Number')\n","TCP = grouped_data.agg({\"Avg_TCP_retransmission\": \"sum\"})\n","Top = TCP.sort_values(by='Avg_TCP_retransmission', ascending=False)\n","print(Top.head(10))\n","print(Top.tail(10))"],"execution_count":120,"outputs":[{"output_type":"stream","text":["               Avg_TCP_retransmission\n","MSISDN/Number                        \n","3.366773e+10             1.666547e+10\n","3.365908e+10             1.587636e+10\n","3.366098e+10             1.474820e+10\n","3.376128e+10             1.207838e+10\n","3.376264e+10             1.175600e+10\n","3.365066e+10             1.118069e+10\n","3.366318e+10             1.112569e+10\n","3.376357e+10             1.035721e+10\n","3.365864e+10             1.033157e+10\n","3.376386e+10             1.018834e+10\n","               Avg_TCP_retransmission\n","MSISDN/Number                        \n","3.366165e+10                      0.0\n","3.366165e+10                      0.0\n","3.366164e+10                      0.0\n","3.366165e+10                      0.0\n","3.366164e+10                      0.0\n","3.366164e+10                      0.0\n","3.366164e+10                      0.0\n","3.366164e+10                      0.0\n","3.366164e+10                      0.0\n","8.823971e+14                      0.0\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"Bg3u0TKDCHX1","colab_type":"text"},"source":["##Average RTT"]},{"cell_type":"code","metadata":{"id":"bVBq6WEY23tQ","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1596315715982,"user_tz":-180,"elapsed":3084,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}}},"source":["RTT = da['Avg_RTT'] = da['Avg RTT DL (ms)'] + da['Avg RTT DL (ms)']"],"execution_count":103,"outputs":[]},{"cell_type":"code","metadata":{"id":"0yQiVkfkCcEG","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":239},"executionInfo":{"status":"ok","timestamp":1596315715988,"user_tz":-180,"elapsed":2024,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"6c028c8d-3436-4951-9163-43eab27b8a48"},"source":["RTT.fillna(RTT.mean())\n"],"execution_count":104,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0          84.000000\n","1         130.000000\n","2         219.591412\n","3         219.591412\n","4         219.591412\n","             ...    \n","149996     64.000000\n","149997     54.000000\n","149998     86.000000\n","149999     74.000000\n","150000    219.591412\n","Name: Avg RTT DL (ms), Length: 150001, dtype: float64"]},"metadata":{"tags":[]},"execution_count":104}]},{"cell_type":"code","metadata":{"id":"vlROeteoCuz6","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1596316533754,"user_tz":-180,"elapsed":1380,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"f3d3dce6-c716-4f18-adee-5a70f9504707"},"source":["# Upper and lower limits of duration\n","dur_upper_limit, dur_lower_limit = normal_boundaries(da, 'Avg_RTT', 1.5)\n","dur_upper_limit, dur_lower_limit"],"execution_count":127,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(598.4324054454909, -261.5797583527336)"]},"metadata":{"tags":[]},"execution_count":127}]},{"cell_type":"code","metadata":{"id":"eMmGiQTBGL9x","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1596316553856,"user_tz":-180,"elapsed":1248,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}}},"source":["# Replacing the outliers by the maximum and minimum limit\n","\n","da['Avg_RTT']= np.where(da['Avg_RTT'] > dur_upper_limit, dur_upper_limit,\n","                       np.where(da['Avg_RTT'] < dur_lower_limit, dur_lower_limit, da['Avg_RTT']))"],"execution_count":129,"outputs":[]},{"cell_type":"code","metadata":{"id":"RPBrEtxZK80a","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":461},"executionInfo":{"status":"ok","timestamp":1596316559481,"user_tz":-180,"elapsed":1234,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"06881922-6069-42ed-9260-4f51f94ee379"},"source":["grouped_data= da.groupby('MSISDN/Number')\n","RRT = grouped_data.agg({\"Avg_RTT\": \"sum\"})\n","Top = RRT.sort_values(by='Avg_RTT', ascending=False)\n","print(Top.head(10))\n","print(Top.tail(10))"],"execution_count":130,"outputs":[{"output_type":"stream","text":["                   Avg_RTT\n","MSISDN/Number             \n","3.366183e+10   3189.729622\n","3.366522e+10   2992.162027\n","3.369917e+10   2951.729622\n","3.366842e+10   2848.864811\n","3.366186e+10   2760.864811\n","3.366471e+10   2694.432405\n","3.365826e+10   2680.000000\n","3.369923e+10   2606.432405\n","3.365900e+10   2603.297216\n","3.366440e+10   2586.864811\n","               Avg_RTT\n","MSISDN/Number         \n","3.369975e+10       0.0\n","3.366189e+10       0.0\n","3.366189e+10       0.0\n","3.369976e+10       0.0\n","3.366189e+10       0.0\n","3.369975e+10       0.0\n","3.369975e+10       0.0\n","3.366189e+10       0.0\n","3.369975e+10       0.0\n","8.823971e+14       0.0\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"e-N93gVgI1AO","colab_type":"text"},"source":["##Handset type"]},{"cell_type":"code","metadata":{"id":"hvmgZMT1HzCI","colab_type":"code","colab":{}},"source":["da['Handset Type'].fillna(da['Handset Type'].mode())"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"AA98Tr16KIX8","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":219},"executionInfo":{"status":"ok","timestamp":1596275208080,"user_tz":-180,"elapsed":1218,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"3d23567b-6542-4e62-a6cd-fce183a95eff"},"source":["grouped_data= da.groupby('MSISDN/Number')\n","total = grouped_data.agg({\"Handset Type\": \"value_counts\"})\n","x= total['Handset Type'].value_counts().head(10)\n","x "],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1     77740\n","2     21451\n","3      4421\n","4      1949\n","5       938\n","6       208\n","7        75\n","8        34\n","9        17\n","10       12\n","Name: Handset Type, dtype: int64"]},"metadata":{"tags":[]},"execution_count":58}]},{"cell_type":"markdown","metadata":{"id":"re_hZKT5VQQA","colab_type":"text"},"source":["##Average throughput"]},{"cell_type":"code","metadata":{"id":"2IJfWH9yLhmF","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1596316092618,"user_tz":-180,"elapsed":1251,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}}},"source":["Throughput = da['Avg_Throughput'] = da['Avg Bearer TP DL (kbps)'] + da['Avg Bearer TP UL (kbps)']"],"execution_count":119,"outputs":[]},{"cell_type":"code","metadata":{"id":"EPLxl-a1WtPD","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":239},"executionInfo":{"status":"ok","timestamp":1596315744524,"user_tz":-180,"elapsed":2324,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"648c2b61-698d-4624-badc-951c986f4dc8"},"source":["Throughput.fillna(Throughput.mean())"],"execution_count":109,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0            67.000000\n","1            42.000000\n","2            15.000000\n","3            88.000000\n","4            15.000000\n","              ...     \n","149996      117.000000\n","149997       77.000000\n","149998       90.000000\n","149999       71.000000\n","150000    15070.474573\n","Length: 150001, dtype: float64"]},"metadata":{"tags":[]},"execution_count":109}]},{"cell_type":"code","metadata":{"id":"vfNdgPuPW9jk","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":35},"executionInfo":{"status":"ok","timestamp":1596315747546,"user_tz":-180,"elapsed":1987,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"73762839-f42d-4403-d891-c999d7c92fac"},"source":["# Upper and lower limits of duration\n","dur_upper_limit, dur_lower_limit = normal_boundaries(da, 'Avg_Throughput', 1.5)\n","dur_upper_limit, dur_lower_limit"],"execution_count":110,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(55309.24134208071, -25168.292195414047)"]},"metadata":{"tags":[]},"execution_count":110}]},{"cell_type":"code","metadata":{"id":"VDLiR9y6XXwj","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1596315750480,"user_tz":-180,"elapsed":2653,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}}},"source":["# Replacing the outliers by the maximum and minimum limit\n","\n","da['Avg_Throughput']= np.where(da['Avg_Throughput'] > dur_upper_limit, dur_upper_limit,\n","                       np.where(da['Avg_Throughput'] < dur_lower_limit, dur_lower_limit, da['Avg_Throughput']))"],"execution_count":111,"outputs":[]},{"cell_type":"code","metadata":{"id":"qp12Hlj_XmKu","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":461},"executionInfo":{"status":"ok","timestamp":1596316240175,"user_tz":-180,"elapsed":1179,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"ae6c283c-427f-47a6-d034-5062b9501dab"},"source":["grouped_data= da.groupby('MSISDN/Number')\n","Throughput = grouped_data.agg({\"Avg_Throughput\": \"sum\"})\n","Top = Throughput.sort_values(by='Avg_Throughput', ascending=False)\n","print(Top.head(10))\n","print(Top.tail(10))"],"execution_count":122,"outputs":[{"output_type":"stream","text":["               Avg_Throughput\n","MSISDN/Number                \n","3.376233e+10         902222.0\n","3.366871e+10         840424.0\n","3.365955e+10         798342.0\n","3.366995e+10         690815.0\n","3.366843e+10         676858.0\n","3.369817e+10         618797.0\n","3.362570e+10         564179.0\n","3.365808e+10         550352.0\n","3.376264e+10         549661.0\n","3.366566e+10         530353.0\n","               Avg_Throughput\n","MSISDN/Number                \n","3.366050e+10              0.0\n","3.365096e+10              0.0\n","3.363841e+10              0.0\n","3.369859e+10              0.0\n","3.375292e+10              0.0\n","3.377746e+10              0.0\n","3.377776e+10              0.0\n","3.366062e+10              0.0\n","3.366923e+10              0.0\n","3.366087e+10              0.0\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"-Z46y4f51aWU","colab_type":"code","colab":{}},"source":["sns.catplot(x=\"Handset Type\", y=\"Avg_Throughput\", kind=\"box\", data=da)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"esq_PfHkc1Ap","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":465},"executionInfo":{"status":"ok","timestamp":1596225991021,"user_tz":-180,"elapsed":105975,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"d4959424-c3c2-4ea4-926c-f33b3b4856d3"},"source":["sns.catplot(x=\"Handset Type\", y=\"Avg_TCP_retransmission\", kind=\"box\", data=da)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/seaborn/axisgrid.py:856: UserWarning: Tight layout not applied. The left and right margins cannot be made large enough to accommodate all axes decorations. \n","  self.fig.tight_layout()\n"],"name":"stderr"},{"output_type":"execute_result","data":{"text/plain":["<seaborn.axisgrid.FacetGrid at 0x7f8c4d9fd9e8>"]},"metadata":{"tags":[]},"execution_count":162},{"output_type":"display_data","data":{"image/png":"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UpI0dOhQvfjii/rzn/+sbdu2KTExUTExMZKkpKQkvfPOO3rkkUdKvFepnewdO3bokksu8XRc3Tp27KgdO3b4PGfXrl0aOnSo5s6dq5tvvllTp06VVNB+X7Zsmb755hv9+9//1v79+z3npKWlKS0tTV9//bU+//xz7d271/NanTp1NG3aNH311Vf6+uuv9csvvyg9PV2SNHXqVLlcLr3++usyDENffvmlJk2apNtvv12SdPz4cd155526/fbb5XK5dMcdd6h3796emiTp/PnzevTRR+VyubR//365XC7Z7XbNmzev4BtksWj9+vUaO3asJOnqq6/Wc889p9q1a8swDK1bt07PPvusJOnUqVOqVauWoqOj1bRpU61Zs0Z169ZVRESE6tSpo+joaH355Zfq16+fJMlqtXo6z+4fJnfIzc3NLfbRCl1mAABqhsJNL4fDoczMTE/AE8DRDwAAE5RJREFUluTpakdERHgyicViUXZ2tq699lrPdl5enhwOh+x2u6699lq9+OKL2rZtm6SCoa6RkZGKiorydKeXLl2qhg0bKiwsTH/9618VHh6u06dPa+HCherUqZMSEhKUkpIiwzA0a9YsjRgxwlPTsWPHlJeXJ5fLpWuuuUZz587V4MGDdeDAAR08eFBSQUe9Y8eO+vrrr/XEE0/o73//u/Lz8zVs2DDdeeed6tu3r3JycrRz505ddtllGjFihL755hv16NFD33zzjXbt2qXIyEjNnTtXSUlJev3115WQkKCMjIxyfV/btGmjBx54QH379tUNN9yg+fPn65lnnpEkHT16VE2bNvUc27RpUx09elSSdNVVV2n16tX67bffZLfbtWDBgmLNzqJKDdmldTVLCny/+93v1K5dO0kFYdz9TV27dq1uvvlmxcTEyGKxeIKw+7VbbrlFsbGxCgsL05133ul5zeFwaPz48Ro8eLCGDBminTt3ev5xrFmzRrGxsbJYLIqIiFDLli2Vnp6ugQMHSpLi4+M9XfHIyEg5HA61a9dOf/vb3zwflUyZMkUzZsyQYRhq1qyZwsPDVa9ePQ0bNkwul0tWq9UTkiVp48aN+vTTT3XmzBm5XC79/ve/1wcffCBJnl8c8vPzdfToUTmdTiUkJOjkyZOKiIiQ3W5Xq1atPB992O122e12n99Xp9OpTz/9tNx/HwAAwLyK5qrw8HCvbXfwdXM3QPPy8nT27Fm5XC6Fh4fL5XKpU6dOnpDtVqtWLW3cuFG5ubkaPHiwZ3/9+vV18uRJxcXFqWPHjrr++uv13HPP6fTp05oxY4YcDofi4+NVv359paenKycnp9T3sXfvXjVo0EDHjh3Tbbfdph9//FGRkZHKzMyUJMXExKhPnz6SLuTE119/XbGxsXryySdlt9v1l7/8Rd26dVN8fLzXtdPS0rRu3Trl5OTotttu06efflpm0C3q8OHDWrp0qRYvXqzvvvtOycnJevHFF8s8r3v37rr77rv14IMP6p577tGll15a5hDdUkN2q1atdODAAc83xm3Tpk3q1KmTz3MKDwC3WCzFQqS/PvjgA50+fVqzZ8/W3Llz1b9/f5/DIiIiIrRmzRrFx8cX+0spKjU1VUOHDpUkHTp0yLM/KipKkvTYY495gnpeXp62bdvmCbj9+vXTvHnzPP9wr732Ws9Qmnr16qlRo0bq3bu3IiIiFBcXp0suuUR16tTxjKm67777PNeqXbu2oqOj1a1bN4WFhemmm25SixYtJBV87xwOhywWi+eXiLLGlQMAgKqlcDB25wxfD8u5h566uT/hlv5/e3cfFFX1xgH8e2F5W0EEZFdEMAYHhhGLJRU1HFPBalVAHS0TM1GxlEIMS0VFnH4ZJCaSwsQoEkkgicRIhGlCoiMNpIgvKZqGvBrYguwCC7vn9wezJ1ZQ0ShLn8+MI/ee+3LOYdl59uxzzu365nv58uWwtrbm+wYPHqz3jTgAeHl5wcjICBkZGdBqtWCM8djhvffeg0ajQUpKCpRKJYyNjVFbW4tRo0YBACQSCcrKyrBs2TJYWVkhNTUVV69ehampKbKzsxEYGIjBgwfzgNzU1LRHgCuVSnl9ExIS8M033yA2NhYajYbHN3fHiSqVCoWFhYiNjQVjDOHh4bC0tNQbIddhjCEkJASmpqZITk7G4cOHkZ6ejtraWp7y8SDfffcdXFxcIJFIAAABAQEoLi4GANjZ2aGmpoYfW1NTAzs7O769aNEiHDp0COnp6XBxceHp0Pdy3yB72LBhePnll7F582Ye2F65cgUpKSlYtWpVnxqjM3bsWOTn56O1tRVarZbnRAPAuHHjkJeXB5VKBY1Gg4MHD/KyO3fuwNbWFiYmJqivr8exY8d42fjx46FSqcAYg4GBAQYOHIhFixbx8j/++AMlJSUAukbEXVxc4Ovri7a2Np7Irhuh1mGMQalUYubMmfxTZUVFBQ/GW1tbcf36dR4or169GhUVFQC6PnW2tbXh0qVLaG1thVqthpubG4YOHQqFQoFnnnkGFy5cwPDhwwF05ZQbGBjgl19+gbm5OYYNG8Zn4t49ai0IAo1kE0IIIf8xusmAAHjA29s8K6VSqbety0vWXaO0tJRvGxgY4NatW3ByckJnZyePD06dOsVTSywsLKDRaGBhYQGRSITo6GiIxWJcvXoVKSkpcHFxQXZ2NubOnQuJRILS0lKo1WrY2NigsbERJiYmMDMzg1QqRWZmJnJyclBXV4fhw4dDKpXC2toaGRkZAMAHVCdMmAAnJye0t7fzBTI++eQTANDLYNC5evUqWltbER8fDwsLC6xduxaGhob43//+B0EQMGDAAL7iCtCVQ56WloYpU6YgPT0darUaWVlZaGtrg7u7e59+H8OGDUNpaSmf81ZYWMhXFpk4cSLKy8t5xkF6ejpfTQ/omicIAE1NTUhKSsKSJUvue68HLkURGRmJ7du3Qy6XQxAE1NfX48CBA3Bzc+tTY3SmTp2KM2fOwM/PD5aWlvDw8EBTUxMAYPLkyTh79iz8/f35xMf6+noAwMKFCxEaGooZM2ZAKpVi/Pjx/JorVqxAWloaIiMjcefOHSxduhQLFizg5RKJBJmZmTh+/DhPO3F2dkZ9fT0Pxj/88EPs3LkTjDG+fE1MTAx27twJkUiEjo4OrFu3jn/CPHPmDIKDg3nQK5fL4e7ujvLycsyfPx/79u3j7bKysoKtrS0qKyvR3t6OmzdvIioqis8u1mq1en9Ue/fu5SPkjDE4OjqisrISQP9MaiSEEELI46OLD3rTfck+QRDw66+/8m3GGPLy8vSObWpq4gNzOrpJjlqtlgenjY2NMDY2hlKp5LGLLlicM2cOxo4di3Xr1iEsLAxisRirV69GTEwMPD09kZ+fj8uXL2Pz5s18VZS4uDjY2trCysoK2dnZ+Prrr3mQv2jRIuTl5WHWrFkIDg7mi0fExcX1+m18UlISgK4l/lpaWlBVVQUTExN4eXnB3t4eUqkUu3btQmJiItRqNY4ePQqFQoGMjAwcP34cu3fvhpWVFeLi4nqsvHIv06ZNQ1lZGWbPns3Tgbdu3Qqg69uELVu2YPny5dBqtXBzc0NERAQ/NygoCFqtFp2dnViwYAF8fHzuey+BPcTwaEdHBzZt2oS6ujokJiY+dPpCS0sLzM3NodVqERERAYlEgrCwsIe6Rl/1da3t/5KSkhIEBgbynPQdO3YgOTkZjDEIgoCYmBi89NJLcHV1RVFREWxtbXtco6CgABEREbh9+za0Wi3EYjECAwMhk8mwdetWVFVV8byut99+G3FxcRg0aBAUCgWeffZZnD9/HgD4CiparRaWlpY93jgMDQ31Pr0TQggh/enub3hFIhHMzc2hUChgYmICKysrvclwDg4OmDt3LhISEqDVansMXhkZGUGj0egFu7r5VLrncQiCAF9fX8THx+O5556DWq2GSCSCIAjQaDR8AG3AgAGwt7fHvHnzkJiYiKamJuzYsQOTJ0+GSqVCaGgoioqK4OjoiDVr1sDa2hrR0dEoLy+HIAiws7PDgAED0NHRgc7OThw5cgQAsHjxYlhbW8PBweGeGQULFy5EUFAQJk+ejJs3b+Kdd97h7XJ2dsaGDRt4qgT5ez1UkP1XrVy5EtXV1Whra8PIkSMRFRXVIwepvzyJQfbjdOzYMaxatYoveq8b5Qe61um8fv06tFotzwG7l38i7WX8+PG4cOECWlpa+mVewIOYmZmhra2N0nn+YX19WAMh/0bGxsa9pgz8XaysrODo6Ijz589DEAS+jNn9DBw4EM3NzQD+/HvTvYc7OjoiODgYubm5PC0AAJ9sd/cgiyAIEIvFaG9v5w9LcXR0RHNzM2bMmIFLly7BwsICZWVlUKlUvH90D0a5ceMGBEGAmZkZLCwsoFQq+ftuZ2cnBEHgk/4GDRqEvXv3wsXFBa6urpDJZDAyMkJKSgry8/Ph6ekJIyMjnDx5EjNnzgQAvgTx0qVL+T6dGzduIC8vjy/qMGnSJADAkiVLUFlZiYSEBERFRSEoKAjV1dV4/fXX9UZVN23ahKCgIL4s3MOIjY2Fo6Mj5s6dy/dlZmZi+vTpfCk58i/GCCFPpLKyMlZaWvq3XT85OZnFxMQ80j3effdd9vPPP9/z3LKyMpaTk8M2btzI0tLS/mpV+TW730+3/f7777OEhIQHHs8YY0VFRayiokJvX3t7u14ddcd033/9+nVWUFDAGGOssbGRbdy4kX311VcPrKfuWt9++y2rq6vj/3eXlpbGIiMj2caNG9mSJUtYbW2tXt3i4+NZQUEBO3DgAFMqlXptuPt6uns3NjaynJwcVlRUxEpKSlhOTg6vz/bt29m1a9dYXl4eCwwMZBkZGXrXq6ys1OuP6OhoVlJS0qOdRUVFbO/evayuro6dOHGC7dy5U6+fUlNTmUaj4cfr6sQYY4mJiWz//v1sz549rKCggJWVlbF9+/bp/W66X6s3tbW1bO3atXp9dfdrLTU1leXm5rK6urpH/nvq7TVzL42NjSwrK4slJSXxtj5I937qrQ3d3auN3fu5O93rQ9f397p+99/N3ed29zB90Ve93bs392vnv9l/td6kyz86kk0IIX+XS5cu9boMU2BgoN4oECF/t7feeouvratjZ2eHxMTEHsfS65aQJxcF2YQQQgghhPSzvk3FJIQQQgghhPQZBdmEEEIIIYT0MwqyCSGkH8XHxyM8PPxxV4MQQshjRkE2IeSJNmXKFJw6dUpvX1ZWFubPn/+YavRgD6rf9OnTIZPJIJPJ4ObmhlGjRvHt3ibXEUII+ec98ImPhBBC/l1yc3P5zwsXLoSfnx+tREEIIf8yNJJNCHnqff755/Dx8YFMJoNcLsf333/Py3SjytHR0RgzZgymTJmCwsJCXn7z5k3+1NTFixfrPea4vb0d4eHh8PLywujRozFnzhw0NDQAAO7cuYP169fD29sbEydOxKeffgqNRoNr164hMjISZ8+ehUwmw+jRo/vcjhkzZuCHH37g2x0dHfDy8sLFixdRVVUFV1dXZGRkwNvbG97e3tizZw8/VqvV8n7w8vJCaGgoFArFI/UnIYQQCrIJIQQODg7Yv38/SktLERISgjVr1uDWrVu8/Ny5c3BycsLp06exdOlSRERE8Cd8hoeHY+TIkSguLsaKFStw6NAhft6hQ4fQ0tKCgoICFBcXIyoqCqampgCAtWvXQiQS4ciRI8jOzsbJkyeRmZkJZ2dnREVFwcPDA2fOnEFJSUmf2+Hv74+cnBy+XVhYCIlEwp9UB3Q92e7IkSPYs2cPkpKSeCpNamoqjh49ii+//BInTpyApaUltmzZ8mgdSgghhIJsQsiTb+XKlRg9ejT/FxUVpVf+yiuvQCqVwsDAAHK5HMOHD8e5c+d4+dChQzFv3jwYGhpi1qxZ+P3339HQ0ICamhqUl5cjNDQUxsbGfKRbRyQSQaFQ4LfffoOhoSHc3d1hbm6OhoYGFBYWYv369RCLxbCxscGbb76plwbyKPz8/FBYWIiWlhYAQE5ODvz8/Hr0hVgshqurK2bPno3Dhw8DANLT0xEWFoYhQ4bA2NgYISEhyM/PR2dn51+qEyGEPK0oJ5sQ8sTbtWsXJkyYwLezsrKQmZnJt7Ozs5GcnIzq6moAgEql0kv7GDx4MP/ZzMxM75iBAwdCLBbz8qFDh/Kn/fn7+6Ourg6rV69Gc3Mz/Pz8EBYWhpqaGnR2dsLb25ufp9VqYWdn95faKZVK4enpifz8fPj6+uLHH39ERESE3jHd72Fvb48rV64AAGpqarBy5UoYGPw59mJgYIDGxkZIpdK/VC9CCHkaUZBNCHmqVVdXY8OGDdi3bx9kMhkMDQ3h7+/fp3NtbW3R3NwMlUrFA+2amhoIggAAMDIyQkhICEJCQlBVVYXg4GA4OTlh0qRJMDY2xunTpyES9Xwb1p3/KGbNmoXMzExoNBp4eHj0CJBra2vh7OzM6yqRSAAAQ4YMwUcffYTnn3/+ke9NCCHkT5QuQgh5qrW2tkIQBFhbWwMADh48iIqKij6da29vD3d3d8THx0OtVqOkpATHjx/n5adPn8bly5eh0Whgbm4OkUgEAwMDSCQSvPDCC/j444/R0tICrVaLyspK/PTTTwAAGxsb1NfXQ61WP3R7fHx8cPHiRXzxxRcICAjoUb579260traioqICWVlZkMvlAID58+djx44dfDT/9u3bOHr06EPfnxBCSBcaySaEPNVGjBiBoKAgvPbaaxAEAQEBAfD09Ozz+bGxsfjggw/g5eUFDw8PBAQEoLm5GQDQ0NCAyMhI1NfXQywWQy6X81HymJgYbNu2DXK5HEqlEg4ODli2bBkAYNy4cRgxYgS8vb0hCAKKi4v7XB9TU1NMmzYNubm58PX17VE+duxY+Pr6gjGGoKAgnrLyxhtv8H23bt2CjY0N5HI5fHx8+nxvQgghfxKYboo8IYSQJ8Jnn32GGzduYNu2bXxfVVUVpk6digsXLvSaokIIIaR/UboIIYQ8QRQKBQ4ePIhXX331cVeFEEKeahRkE0LIE+LAgQN48cUXMXHiRIwZM+ZxV4cQQp5qlC5CCCGEEEJIP6ORbEIIIYQQQvoZBdmEEEIIIYT0MwqyCSGEEEII6WcUZBNCCCGEENLPKMgmhBBCCCGkn1GQTQghhBBCSD/7P8ig04GL1pNFAAAAAElFTkSuQmCC\n","text/plain":["<Figure size 360x360 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"markdown","metadata":{"id":"HNwTwjzfsum7","colab_type":"text"},"source":["##segmenting users into groups of experiences"]},{"cell_type":"code","metadata":{"id":"x51l0Aiaug5Y","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":294},"executionInfo":{"status":"ok","timestamp":1596318229736,"user_tz":-180,"elapsed":1554,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"8f9e1a84-5880-4d54-ca5f-b315e0280559"},"source":["joined2_df =pd.DataFrame(TCP).join(Throughput, how='left')\n","print(joined2_df)"],"execution_count":144,"outputs":[{"output_type":"stream","text":["               Avg_TCP_retransmission  Avg_Throughput\n","MSISDN/Number                                        \n","3.360100e+10                      0.0            76.0\n","3.360100e+10                      0.0            99.0\n","3.360100e+10                      0.0            97.0\n","3.360101e+10                   2132.0           248.0\n","3.360101e+10               18699260.0         56844.0\n","...                               ...             ...\n","3.379000e+10                 430088.0         10365.0\n","3.379000e+10                      0.0           116.0\n","3.197021e+12                      0.0             1.0\n","3.370000e+14                      0.0            33.0\n","8.823971e+14                      0.0             2.0\n","\n","[106856 rows x 2 columns]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"KRDsVrF8sqVr","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":294},"executionInfo":{"status":"ok","timestamp":1596318349077,"user_tz":-180,"elapsed":2312,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"bc501bf1-a98b-4117-ed4a-08581a962832"},"source":["N_CLUSTERS = 3\n","\n","cols_to_standardize = ['Avg_TCP_retransmission',  'Avg_Throughput']\n","data_to_standardize = joined2_df[cols_to_standardize]\n","\n","# Create the scaler.\n","scaler = StandardScaler().fit(data_to_standardize)\n","\n","# Standardize the data\n","standardized_data = joined2_df.copy()\n","standardized_columns = scaler.transform(data_to_standardize)\n","standardized_data[cols_to_standardize] = standardized_columns\n","\n","\n","print('Sample of data to use:')\n","print(standardized_data.sample(5))\n","print('')\n","\n","model = KMeans(n_clusters=N_CLUSTERS).fit(standardized_data)\n","\n","joined2_df['cluster'] = model.predict(standardized_data)\n","\n","print('Cluster summary:')\n","summary = joined2_df.groupby(['cluster']).mean()\n","summary['count'] = joined2_df['cluster'].value_counts()\n","summary = summary.sort_values(by='count', ascending=False)\n","print(summary)"],"execution_count":147,"outputs":[{"output_type":"stream","text":["Sample of data to use:\n","               Avg_TCP_retransmission  Avg_Throughput\n","MSISDN/Number                                        \n","3.376089e+10                -0.078682       -0.494185\n","3.364221e+10                -0.066280        0.106318\n","3.377868e+10                -0.078568       -0.489401\n","3.363038e+10                -0.078682       -0.492959\n","3.375452e+10                -0.078682       -0.492040\n","\n","Cluster summary:\n","         Avg_TCP_retransmission  Avg_Throughput  count\n","cluster                                               \n","1                  4.459958e+06     9548.095671  95619\n","0                  7.365587e+07   117701.064730  11015\n","2                  5.927478e+09   148880.337838    222\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"c7J_mK4oCCO9","colab_type":"text"},"source":["#Satisfaction Analysis "]},{"cell_type":"code","metadata":{"id":"1PmwyKXyezQu","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":578},"executionInfo":{"status":"ok","timestamp":1596326869655,"user_tz":-180,"elapsed":3035,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"72ede36a-cc22-4e5e-8be9-dacfb3c4992f"},"source":["#Engagement score to each user\n","points = joined_df.drop('Bearer Id', axis=1)\n","kmeans = cluster.KMeans(n_clusters=3, random_state=0).fit(points)\n","joined_df['cluster'] = kmeans.labels_\n","centroids = kmeans.cluster_centers_\n","dists = pd.DataFrame(\n","    sdist.cdist(points, centroids), \n","    columns=['dist_{}'.format(i) for i in range(len(centroids))],\n","    index=joined_df.index)\n","df1 = pd.concat([joined_df, dists], axis=1)\n","print(df1)\n","df1.describe()"],"execution_count":217,"outputs":[{"output_type":"stream","text":["               Bearer Id      Dur. (ms)  ...        dist_1        dist_2\n","MSISDN/Number                            ...                            \n","3.360100e+10           1  116720.000000  ...  9.617651e+08  5.457353e+08\n","3.360100e+10           1  181230.000000  ...  1.683596e+09  1.760956e+08\n","3.360100e+10           1  134969.000000  ...  1.244489e+09  2.630112e+08\n","3.360101e+10           1   49878.000000  ...  1.414256e+09  9.324457e+07\n","3.360101e+10           2   37104.000000  ...  3.830448e+08  1.124456e+09\n","...                  ...            ...  ...           ...           ...\n","3.379000e+10           1    8810.000000  ...  1.125814e+09  3.816864e+08\n","3.379000e+10           1  140988.000000  ...  1.360148e+09  1.473521e+08\n","3.197021e+12           1  226164.992565  ...  1.608332e+09  1.008313e+08\n","3.370000e+14           1  226164.992565  ...  1.244168e+09  2.633326e+08\n","8.823971e+14           1  226164.992565  ...  1.703722e+09  1.962219e+08\n","\n","[106856 rows x 7 columns]\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Bearer Id</th>\n","      <th>Dur. (ms)</th>\n","      <th>Total_data</th>\n","      <th>cluster</th>\n","      <th>dist_0</th>\n","      <th>dist_1</th>\n","      <th>dist_2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>106856.000000</td>\n","      <td>1.068560e+05</td>\n","      <td>1.068560e+05</td>\n","      <td>106856.000000</td>\n","      <td>1.068560e+05</td>\n","      <td>1.068560e+05</td>\n","      <td>1.068560e+05</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>1.393792</td>\n","      <td>1.377163e+05</td>\n","      <td>6.909646e+08</td>\n","      <td>1.013280</td>\n","      <td>3.821863e+08</td>\n","      <td>1.185966e+09</td>\n","      <td>4.164881e+08</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>0.806022</td>\n","      <td>1.259685e+05</td>\n","      <td>4.910241e+08</td>\n","      <td>0.953655</td>\n","      <td>3.367876e+08</td>\n","      <td>3.948660e+08</td>\n","      <td>4.425072e+08</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.000000</td>\n","      <td>7.142000e+03</td>\n","      <td>3.325284e+07</td>\n","      <td>0.000000</td>\n","      <td>2.398021e+04</td>\n","      <td>5.207344e+04</td>\n","      <td>1.793339e+04</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>1.000000</td>\n","      <td>7.130800e+04</td>\n","      <td>3.587340e+08</td>\n","      <td>0.000000</td>\n","      <td>1.348209e+08</td>\n","      <td>9.878776e+08</td>\n","      <td>1.376510e+08</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>1.000000</td>\n","      <td>1.027400e+05</td>\n","      <td>6.179231e+08</td>\n","      <td>1.000000</td>\n","      <td>3.342413e+08</td>\n","      <td>1.225991e+09</td>\n","      <td>2.851240e+08</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>2.000000</td>\n","      <td>1.727990e+05</td>\n","      <td>8.573327e+08</td>\n","      <td>2.000000</td>\n","      <td>5.579760e+08</td>\n","      <td>1.484041e+09</td>\n","      <td>5.243775e+08</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>18.000000</td>\n","      <td>3.835308e+06</td>\n","      <td>8.853590e+09</td>\n","      <td>2.000000</td>\n","      <td>8.027021e+09</td>\n","      <td>7.013136e+09</td>\n","      <td>8.520636e+09</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["           Bearer Id     Dur. (ms)  ...        dist_1        dist_2\n","count  106856.000000  1.068560e+05  ...  1.068560e+05  1.068560e+05\n","mean        1.393792  1.377163e+05  ...  1.185966e+09  4.164881e+08\n","std         0.806022  1.259685e+05  ...  3.948660e+08  4.425072e+08\n","min         1.000000  7.142000e+03  ...  5.207344e+04  1.793339e+04\n","25%         1.000000  7.130800e+04  ...  9.878776e+08  1.376510e+08\n","50%         1.000000  1.027400e+05  ...  1.225991e+09  2.851240e+08\n","75%         2.000000  1.727990e+05  ...  1.484041e+09  5.243775e+08\n","max        18.000000  3.835308e+06  ...  7.013136e+09  8.520636e+09\n","\n","[8 rows x 7 columns]"]},"metadata":{"tags":[]},"execution_count":217}]},{"cell_type":"code","metadata":{"id":"_hHTj4_-XfAt","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":578},"executionInfo":{"status":"ok","timestamp":1596326890363,"user_tz":-180,"elapsed":2475,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"a38e53a3-0d1c-4e88-b057-956fefd7447e"},"source":["#experience score to each user\n","#points = joined2_df.drop('Bearer Id', axis=1)\n","kmeans = cluster.KMeans(n_clusters=3, random_state=0).fit(points)\n","joined2_df['cluster'] = kmeans.labels_\n","centroids = kmeans.cluster_centers_\n","dists = pd.DataFrame(\n","    sdist.cdist(points, centroids), \n","    columns=['dist_{}'.format(i) for i in range(len(centroids))],\n","    index=joined2_df.index)\n","df2 = pd.concat([joined2_df, dists], axis=1)\n","print(df2)\n","df2.describe()"],"execution_count":219,"outputs":[{"output_type":"stream","text":["               Avg_TCP_retransmission  ...        dist_2\n","MSISDN/Number                          ...              \n","3.360100e+10                      0.0  ...  5.457353e+08\n","3.360100e+10                      0.0  ...  1.760956e+08\n","3.360100e+10                      0.0  ...  2.630112e+08\n","3.360101e+10                   2132.0  ...  9.324457e+07\n","3.360101e+10               18699260.0  ...  1.124456e+09\n","...                               ...  ...           ...\n","3.379000e+10                 430088.0  ...  3.816864e+08\n","3.379000e+10                      0.0  ...  1.473521e+08\n","3.197021e+12                      0.0  ...  1.008313e+08\n","3.370000e+14                      0.0  ...  2.633326e+08\n","8.823971e+14                      0.0  ...  1.962219e+08\n","\n","[106856 rows x 6 columns]\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Avg_TCP_retransmission</th>\n","      <th>Avg_Throughput</th>\n","      <th>cluster</th>\n","      <th>dist_0</th>\n","      <th>dist_1</th>\n","      <th>dist_2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>1.068560e+05</td>\n","      <td>106856.00000</td>\n","      <td>106856.000000</td>\n","      <td>1.068560e+05</td>\n","      <td>1.068560e+05</td>\n","      <td>1.068560e+05</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>2.389829e+07</td>\n","      <td>20986.26210</td>\n","      <td>1.013280</td>\n","      <td>3.821863e+08</td>\n","      <td>1.185966e+09</td>\n","      <td>4.164881e+08</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>3.037356e+08</td>\n","      <td>42436.28775</td>\n","      <td>0.953655</td>\n","      <td>3.367876e+08</td>\n","      <td>3.948660e+08</td>\n","      <td>4.425072e+08</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000e+00</td>\n","      <td>0.00000</td>\n","      <td>0.000000</td>\n","      <td>2.398021e+04</td>\n","      <td>5.207344e+04</td>\n","      <td>1.793339e+04</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>0.000000e+00</td>\n","      <td>97.00000</td>\n","      <td>0.000000</td>\n","      <td>1.348209e+08</td>\n","      <td>9.878776e+08</td>\n","      <td>1.376510e+08</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>0.000000e+00</td>\n","      <td>301.00000</td>\n","      <td>1.000000</td>\n","      <td>3.342413e+08</td>\n","      <td>1.225991e+09</td>\n","      <td>2.851240e+08</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>5.711800e+05</td>\n","      <td>26507.25000</td>\n","      <td>2.000000</td>\n","      <td>5.579760e+08</td>\n","      <td>1.484041e+09</td>\n","      <td>5.243775e+08</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>1.666547e+10</td>\n","      <td>902222.00000</td>\n","      <td>2.000000</td>\n","      <td>8.027021e+09</td>\n","      <td>7.013136e+09</td>\n","      <td>8.520636e+09</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["       Avg_TCP_retransmission  Avg_Throughput  ...        dist_1        dist_2\n","count            1.068560e+05    106856.00000  ...  1.068560e+05  1.068560e+05\n","mean             2.389829e+07     20986.26210  ...  1.185966e+09  4.164881e+08\n","std              3.037356e+08     42436.28775  ...  3.948660e+08  4.425072e+08\n","min              0.000000e+00         0.00000  ...  5.207344e+04  1.793339e+04\n","25%              0.000000e+00        97.00000  ...  9.878776e+08  1.376510e+08\n","50%              0.000000e+00       301.00000  ...  1.225991e+09  2.851240e+08\n","75%              5.711800e+05     26507.25000  ...  1.484041e+09  5.243775e+08\n","max              1.666547e+10    902222.00000  ...  7.013136e+09  8.520636e+09\n","\n","[8 rows x 6 columns]"]},"metadata":{"tags":[]},"execution_count":219}]},{"cell_type":"code","metadata":{"id":"tEECgEaUfMWB","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":395},"executionInfo":{"status":"ok","timestamp":1596325710923,"user_tz":-180,"elapsed":2069,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"e2770f82-73af-496e-9bff-fb111485cad1"},"source":["#Top 10 satisfaid customer\n","#by average engagement score \n","df1['avg1'] = df1[['dist_0','dist_1','dist_2']].mean(axis=1)\n","sort_by_avg1 = df1.sort_values('avg1',ascending=False)\n","sort_by_avg1.head(10)"],"execution_count":212,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Bearer Id</th>\n","      <th>Dur. (ms)</th>\n","      <th>Total_data</th>\n","      <th>cluster</th>\n","      <th>dist_0</th>\n","      <th>dist_1</th>\n","      <th>dist_2</th>\n","      <th>avg1</th>\n","      <th>cluster1</th>\n","    </tr>\n","    <tr>\n","      <th>MSISDN/Number</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>3.361489e+10</th>\n","      <td>17</td>\n","      <td>3.635121e+06</td>\n","      <td>8.853590e+09</td>\n","      <td>0</td>\n","      <td>8.027021e+09</td>\n","      <td>7.013136e+09</td>\n","      <td>8.520636e+09</td>\n","      <td>7.853598e+09</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3.376054e+10</th>\n","      <td>15</td>\n","      <td>3.188510e+06</td>\n","      <td>8.511960e+09</td>\n","      <td>0</td>\n","      <td>7.685390e+09</td>\n","      <td>6.671505e+09</td>\n","      <td>8.179005e+09</td>\n","      <td>7.511967e+09</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3.362578e+10</th>\n","      <td>17</td>\n","      <td>3.835308e+06</td>\n","      <td>8.494899e+09</td>\n","      <td>0</td>\n","      <td>7.668330e+09</td>\n","      <td>6.654445e+09</td>\n","      <td>8.161945e+09</td>\n","      <td>7.494907e+09</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3.362632e+10</th>\n","      <td>18</td>\n","      <td>3.742143e+06</td>\n","      <td>7.972765e+09</td>\n","      <td>0</td>\n","      <td>7.146197e+09</td>\n","      <td>6.132311e+09</td>\n","      <td>7.639811e+09</td>\n","      <td>6.972773e+09</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3.367588e+10</th>\n","      <td>15</td>\n","      <td>3.142791e+06</td>\n","      <td>7.889370e+09</td>\n","      <td>0</td>\n","      <td>7.062801e+09</td>\n","      <td>6.048915e+09</td>\n","      <td>7.556416e+09</td>\n","      <td>6.889377e+09</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3.365973e+10</th>\n","      <td>16</td>\n","      <td>3.294368e+06</td>\n","      <td>7.696169e+09</td>\n","      <td>0</td>\n","      <td>6.869600e+09</td>\n","      <td>5.855714e+09</td>\n","      <td>7.363214e+09</td>\n","      <td>6.696176e+09</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3.366646e+10</th>\n","      <td>11</td>\n","      <td>2.413921e+06</td>\n","      <td>7.309989e+09</td>\n","      <td>0</td>\n","      <td>6.483420e+09</td>\n","      <td>5.469534e+09</td>\n","      <td>6.977034e+09</td>\n","      <td>6.309996e+09</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3.376041e+10</th>\n","      <td>12</td>\n","      <td>2.506371e+06</td>\n","      <td>7.129728e+09</td>\n","      <td>0</td>\n","      <td>6.303158e+09</td>\n","      <td>5.289272e+09</td>\n","      <td>6.796773e+09</td>\n","      <td>6.129734e+09</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3.366471e+10</th>\n","      <td>11</td>\n","      <td>2.438372e+06</td>\n","      <td>6.884148e+09</td>\n","      <td>0</td>\n","      <td>6.057579e+09</td>\n","      <td>5.043693e+09</td>\n","      <td>6.551193e+09</td>\n","      <td>5.884155e+09</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3.369879e+10</th>\n","      <td>11</td>\n","      <td>2.449963e+06</td>\n","      <td>6.525862e+09</td>\n","      <td>0</td>\n","      <td>5.699293e+09</td>\n","      <td>4.685407e+09</td>\n","      <td>6.192908e+09</td>\n","      <td>5.525869e+09</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["               Bearer Id     Dur. (ms)  ...          avg1  cluster1\n","MSISDN/Number                           ...                        \n","3.361489e+10          17  3.635121e+06  ...  7.853598e+09         0\n","3.376054e+10          15  3.188510e+06  ...  7.511967e+09         0\n","3.362578e+10          17  3.835308e+06  ...  7.494907e+09         0\n","3.362632e+10          18  3.742143e+06  ...  6.972773e+09         0\n","3.367588e+10          15  3.142791e+06  ...  6.889377e+09         0\n","3.365973e+10          16  3.294368e+06  ...  6.696176e+09         0\n","3.366646e+10          11  2.413921e+06  ...  6.309996e+09         0\n","3.376041e+10          12  2.506371e+06  ...  6.129734e+09         0\n","3.366471e+10          11  2.438372e+06  ...  5.884155e+09         0\n","3.369879e+10          11  2.449963e+06  ...  5.525869e+09         0\n","\n","[10 rows x 9 columns]"]},"metadata":{"tags":[]},"execution_count":212}]},{"cell_type":"code","metadata":{"id":"G6Wj_MOsBcPg","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":395},"executionInfo":{"status":"ok","timestamp":1596326914938,"user_tz":-180,"elapsed":719,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"a9658f56-c341-4032-b375-258ea276d42d"},"source":["# Top 10 satisfaid customer\n","# byAverage experience scores\n","df2['avg2'] = df2[['dist_0','dist_1','dist_2']].mean(axis=1)\n","sort_by_avg2 = df2.sort_values('avg2',ascending=False)\n","sort_by_avg2.head(10)"],"execution_count":220,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Avg_TCP_retransmission</th>\n","      <th>Avg_Throughput</th>\n","      <th>cluster</th>\n","      <th>dist_0</th>\n","      <th>dist_1</th>\n","      <th>dist_2</th>\n","      <th>avg2</th>\n","    </tr>\n","    <tr>\n","      <th>MSISDN/Number</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>3.361489e+10</th>\n","      <td>6644506.0</td>\n","      <td>426350.0</td>\n","      <td>1</td>\n","      <td>8.027021e+09</td>\n","      <td>7.013136e+09</td>\n","      <td>8.520636e+09</td>\n","      <td>7.853598e+09</td>\n","    </tr>\n","    <tr>\n","      <th>3.376054e+10</th>\n","      <td>68633290.0</td>\n","      <td>185370.0</td>\n","      <td>1</td>\n","      <td>7.685390e+09</td>\n","      <td>6.671505e+09</td>\n","      <td>8.179005e+09</td>\n","      <td>7.511967e+09</td>\n","    </tr>\n","    <tr>\n","      <th>3.362578e+10</th>\n","      <td>599992.0</td>\n","      <td>208539.0</td>\n","      <td>1</td>\n","      <td>7.668330e+09</td>\n","      <td>6.654445e+09</td>\n","      <td>8.161945e+09</td>\n","      <td>7.494907e+09</td>\n","    </tr>\n","    <tr>\n","      <th>3.362632e+10</th>\n","      <td>684396.0</td>\n","      <td>121345.0</td>\n","      <td>1</td>\n","      <td>7.146197e+09</td>\n","      <td>6.132311e+09</td>\n","      <td>7.639811e+09</td>\n","      <td>6.972773e+09</td>\n","    </tr>\n","    <tr>\n","      <th>3.367588e+10</th>\n","      <td>70287338.0</td>\n","      <td>203594.0</td>\n","      <td>1</td>\n","      <td>7.062801e+09</td>\n","      <td>6.048915e+09</td>\n","      <td>7.556416e+09</td>\n","      <td>6.889377e+09</td>\n","    </tr>\n","    <tr>\n","      <th>3.365973e+10</th>\n","      <td>422654.0</td>\n","      <td>285945.0</td>\n","      <td>1</td>\n","      <td>6.869600e+09</td>\n","      <td>5.855714e+09</td>\n","      <td>7.363214e+09</td>\n","      <td>6.696176e+09</td>\n","    </tr>\n","    <tr>\n","      <th>3.366646e+10</th>\n","      <td>1616856.0</td>\n","      <td>330193.0</td>\n","      <td>1</td>\n","      <td>6.483420e+09</td>\n","      <td>5.469534e+09</td>\n","      <td>6.977034e+09</td>\n","      <td>6.309996e+09</td>\n","    </tr>\n","    <tr>\n","      <th>3.376041e+10</th>\n","      <td>13071390.0</td>\n","      <td>230376.0</td>\n","      <td>1</td>\n","      <td>6.303158e+09</td>\n","      <td>5.289272e+09</td>\n","      <td>6.796773e+09</td>\n","      <td>6.129734e+09</td>\n","    </tr>\n","    <tr>\n","      <th>3.366471e+10</th>\n","      <td>9176758.0</td>\n","      <td>305454.0</td>\n","      <td>1</td>\n","      <td>6.057579e+09</td>\n","      <td>5.043693e+09</td>\n","      <td>6.551193e+09</td>\n","      <td>5.884155e+09</td>\n","    </tr>\n","    <tr>\n","      <th>3.369879e+10</th>\n","      <td>26922426.0</td>\n","      <td>113496.0</td>\n","      <td>1</td>\n","      <td>5.699293e+09</td>\n","      <td>4.685407e+09</td>\n","      <td>6.192908e+09</td>\n","      <td>5.525869e+09</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["               Avg_TCP_retransmission  ...          avg2\n","MSISDN/Number                          ...              \n","3.361489e+10                6644506.0  ...  7.853598e+09\n","3.376054e+10               68633290.0  ...  7.511967e+09\n","3.362578e+10                 599992.0  ...  7.494907e+09\n","3.362632e+10                 684396.0  ...  6.972773e+09\n","3.367588e+10               70287338.0  ...  6.889377e+09\n","3.365973e+10                 422654.0  ...  6.696176e+09\n","3.366646e+10                1616856.0  ...  6.309996e+09\n","3.376041e+10               13071390.0  ...  6.129734e+09\n","3.366471e+10                9176758.0  ...  5.884155e+09\n","3.369879e+10               26922426.0  ...  5.525869e+09\n","\n","[10 rows x 7 columns]"]},"metadata":{"tags":[]},"execution_count":220}]},{"cell_type":"code","metadata":{"id":"gAz6q0xZOWn-","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":455},"executionInfo":{"status":"ok","timestamp":1596322444135,"user_tz":-180,"elapsed":1110,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"f452014d-5875-4d35-a4dc-7cadc6696108"},"source":["frames = [df1, df2]\n","pd.concat(frames)"],"execution_count":180,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Bearer Id</th>\n","      <th>Dur. (ms)</th>\n","      <th>Total_data</th>\n","      <th>cluster</th>\n","      <th>dist_0</th>\n","      <th>dist_1</th>\n","      <th>dist_2</th>\n","      <th>avg</th>\n","      <th>Avg_TCP_retransmission</th>\n","      <th>Avg_Throughput</th>\n","    </tr>\n","    <tr>\n","      <th>MSISDN/Number</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>3.360100e+10</th>\n","      <td>1.0</td>\n","      <td>116720.0</td>\n","      <td>8.786906e+08</td>\n","      <td>0</td>\n","      <td>5.212077e+07</td>\n","      <td>9.617651e+08</td>\n","      <td>5.457353e+08</td>\n","      <td>5.198737e+08</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3.360100e+10</th>\n","      <td>1.0</td>\n","      <td>181230.0</td>\n","      <td>1.568596e+08</td>\n","      <td>2</td>\n","      <td>6.697102e+08</td>\n","      <td>1.683596e+09</td>\n","      <td>1.760956e+08</td>\n","      <td>8.431339e+08</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3.360100e+10</th>\n","      <td>1.0</td>\n","      <td>134969.0</td>\n","      <td>5.959665e+08</td>\n","      <td>0</td>\n","      <td>2.306033e+08</td>\n","      <td>1.244489e+09</td>\n","      <td>2.630112e+08</td>\n","      <td>5.793679e+08</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3.360101e+10</th>\n","      <td>1.0</td>\n","      <td>49878.0</td>\n","      <td>4.261998e+08</td>\n","      <td>2</td>\n","      <td>4.003700e+08</td>\n","      <td>1.414256e+09</td>\n","      <td>9.324457e+07</td>\n","      <td>6.359568e+08</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3.360101e+10</th>\n","      <td>2.0</td>\n","      <td>37104.0</td>\n","      <td>1.457411e+09</td>\n","      <td>1</td>\n","      <td>6.308411e+08</td>\n","      <td>3.830448e+08</td>\n","      <td>1.124456e+09</td>\n","      <td>7.127805e+08</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>3.379000e+10</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>1.119282e+08</td>\n","      <td>1.125814e+09</td>\n","      <td>3.816864e+08</td>\n","      <td>5.398095e+08</td>\n","      <td>430088.0</td>\n","      <td>10365.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.379000e+10</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2</td>\n","      <td>3.462625e+08</td>\n","      <td>1.360148e+09</td>\n","      <td>1.473521e+08</td>\n","      <td>6.179209e+08</td>\n","      <td>0.0</td>\n","      <td>116.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.197021e+12</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2</td>\n","      <td>5.944458e+08</td>\n","      <td>1.608332e+09</td>\n","      <td>1.008313e+08</td>\n","      <td>7.678696e+08</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>3.370000e+14</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>2.302820e+08</td>\n","      <td>1.244168e+09</td>\n","      <td>2.633326e+08</td>\n","      <td>5.792608e+08</td>\n","      <td>0.0</td>\n","      <td>33.0</td>\n","    </tr>\n","    <tr>\n","      <th>8.823971e+14</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2</td>\n","      <td>6.898364e+08</td>\n","      <td>1.703722e+09</td>\n","      <td>1.962219e+08</td>\n","      <td>8.632602e+08</td>\n","      <td>0.0</td>\n","      <td>2.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>213712 rows × 10 columns</p>\n","</div>"],"text/plain":["               Bearer Id  Dur. (ms)  ...  Avg_TCP_retransmission  Avg_Throughput\n","MSISDN/Number                        ...                                        \n","3.360100e+10         1.0   116720.0  ...                     NaN             NaN\n","3.360100e+10         1.0   181230.0  ...                     NaN             NaN\n","3.360100e+10         1.0   134969.0  ...                     NaN             NaN\n","3.360101e+10         1.0    49878.0  ...                     NaN             NaN\n","3.360101e+10         2.0    37104.0  ...                     NaN             NaN\n","...                  ...        ...  ...                     ...             ...\n","3.379000e+10         NaN        NaN  ...                430088.0         10365.0\n","3.379000e+10         NaN        NaN  ...                     0.0           116.0\n","3.197021e+12         NaN        NaN  ...                     0.0             1.0\n","3.370000e+14         NaN        NaN  ...                     0.0            33.0\n","8.823971e+14         NaN        NaN  ...                     0.0             2.0\n","\n","[213712 rows x 10 columns]"]},"metadata":{"tags":[]},"execution_count":180}]},{"cell_type":"code","metadata":{"id":"9a7jJwIMBxmq","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":257},"executionInfo":{"status":"ok","timestamp":1596322535957,"user_tz":-180,"elapsed":1102,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"83999c3d-fb62-421b-dd6c-b28a6f397479"},"source":["#satisfaction score\n","(df1['avg1'] + df2['avg2'])/2\n"],"execution_count":182,"outputs":[{"output_type":"execute_result","data":{"text/plain":["MSISDN/Number\n","3.360100e+10    5.198737e+08\n","3.360100e+10    8.431339e+08\n","3.360100e+10    5.793679e+08\n","3.360101e+10    6.359568e+08\n","3.360101e+10    7.127805e+08\n","                    ...     \n","3.379000e+10    5.398095e+08\n","3.379000e+10    6.179209e+08\n","3.197021e+12    7.678696e+08\n","3.370000e+14    5.792608e+08\n","8.823971e+14    8.632602e+08\n","Name: avg, Length: 106856, dtype: float64"]},"metadata":{"tags":[]},"execution_count":182}]},{"cell_type":"code","metadata":{"id":"Vx6sMK2IS4-s","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":350},"executionInfo":{"status":"ok","timestamp":1596324841720,"user_tz":-180,"elapsed":2290,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"35c28542-222f-4f28-fdd7-8c4038e3b61f"},"source":["#k-means (k=2) on the engagement score\n","N_CLUSTERS = 2\n","\n","cols_to_standardize = ['avg1']\n","data_to_standardize = df1[cols_to_standardize]\n","\n","# Create the scaler.\n","scaler = StandardScaler().fit(data_to_standardize)\n","\n","# Standardize the data\n","standardized_data = df1.copy()\n","standardized_columns = scaler.transform(data_to_standardize)\n","standardized_data[cols_to_standardize] = standardized_columns\n","\n","\n","print('Sample of data to use:')\n","print(standardized_data.sample(5))\n","print('')\n","\n","model = KMeans(n_clusters=N_CLUSTERS).fit(standardized_data)\n","\n","df1['cluster1'] = model.predict(standardized_data)\n","\n","print('Cluster summary:')\n","summary = df1.groupby(['cluster1']).mean()\n","summary['count'] = df1['cluster1'].value_counts()\n","summary = summary.sort_values(by='count', ascending=False)\n","print(summary)"],"execution_count":204,"outputs":[{"output_type":"stream","text":["Sample of data to use:\n","               Bearer Id  Dur. (ms)  ...        dist_2      avg1\n","MSISDN/Number                        ...                        \n","3.376158e+10           1   159560.0  ...  1.685644e+08 -0.243918\n","3.369812e+10           1    86400.0  ...  6.471447e+07  0.337784\n","3.369840e+10           1   169965.0  ...  2.443786e+07  0.144000\n","3.366938e+10           2   165579.0  ...  8.465308e+08 -0.199227\n","3.366595e+10           2   145093.0  ...  1.336125e+07  0.090707\n","\n","[5 rows x 8 columns]\n","\n","Cluster summary:\n","          Bearer Id      Dur. (ms)  ...          avg1  count\n","cluster1                            ...                     \n","1          1.166605  113283.230707  ...  6.303523e+08  92032\n","0          2.804236  289404.068024  ...  8.552109e+08  14824\n","\n","[2 rows x 9 columns]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"WxkDelb7XA6j","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":350},"executionInfo":{"status":"ok","timestamp":1596328618486,"user_tz":-180,"elapsed":2445,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"acff73e7-cea5-46d5-d96c-c7405cd80a53"},"source":["#k-means (k=2) on the experience score\n","N_CLUSTERS = 2\n","\n","cols_to_standardize = ['avg2']\n","data_to_standardize = df2[cols_to_standardize]\n","\n","# Create the scaler.\n","scaler = StandardScaler().fit(data_to_standardize)\n","\n","# Standardize the data\n","standardized_data = df2.copy()\n","standardized_columns = scaler.transform(data_to_standardize)\n","standardized_data[cols_to_standardize] = standardized_columns\n","\n","\n","print('Sample of data to use:')\n","print(standardized_data.sample(5))\n","print('')\n","\n","model = KMeans(n_clusters=N_CLUSTERS).fit(standardized_data)\n","\n","df2['cluster2'] = model.predict(standardized_data)\n","\n","print('Cluster summary:')\n","summary = df2.groupby(['cluster2']).mean()\n","summary['count'] = df2['cluster2'].value_counts()\n","summary = summary.sort_values(by='count', ascending=False)\n","print(summary)"],"execution_count":222,"outputs":[{"output_type":"stream","text":["Sample of data to use:\n","               Avg_TCP_retransmission  Avg_Throughput  ...        dist_2      avg2\n","MSISDN/Number                                          ...                        \n","3.366402e+10                   1196.0          1002.0  ...  5.220134e+08 -0.719680\n","3.369895e+10                1843574.0         35391.0  ...  6.697391e+08 -0.482761\n","3.362095e+10                  56768.0          3753.0  ...  8.475826e+07 -0.109511\n","3.366698e+10                  63840.0         25303.0  ...  4.962588e+08 -0.760980\n","3.368235e+10                2872944.0         59291.0  ...  1.134823e+09  0.263130\n","\n","[5 rows x 7 columns]\n","\n","Cluster summary:\n","          Avg_TCP_retransmission  Avg_Throughput  ...          avg2  count\n","cluster2                                          ...                     \n","1                   1.506530e+07    15069.122615  ...  6.301563e+08  92607\n","0                   8.130564e+07    59442.893185  ...  8.655588e+08  14249\n","\n","[2 rows x 8 columns]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"uYaRPHE0DBsj","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":144},"executionInfo":{"status":"ok","timestamp":1596325024709,"user_tz":-180,"elapsed":1450,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"183f5c9a-8a6b-407c-e3a2-ef0e74ab15d7"},"source":["#aggrigating clustered engagement scores\n","grouped_data= df1.groupby('cluster1')\n","agg = grouped_data.agg({\"avg1\": \"sum\"})\n","agg.sort_values(by='avg1', ascending=False)\n"],"execution_count":209,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>avg1</th>\n","    </tr>\n","    <tr>\n","      <th>cluster1</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>5.801259e+13</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>1.267765e+13</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                  avg1\n","cluster1              \n","1         5.801259e+13\n","0         1.267765e+13"]},"metadata":{"tags":[]},"execution_count":209}]},{"cell_type":"code","metadata":{"id":"pntwJGSDEXIB","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":144},"executionInfo":{"status":"ok","timestamp":1596328636572,"user_tz":-180,"elapsed":1064,"user":{"displayName":"Rahel Weldegebriel","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhMYYd7eJJ0WTTbGPx1TVIzXE60eeHnFG9brmv8dQ=s64","userId":"17073716905250536501"}},"outputId":"c893756a-5849-4852-846e-d671ee822729"},"source":["#aggrigating clustered experience scores\n","grouped_data= df2.groupby('cluster2')\n","agg = grouped_data.agg({\"avg2\": \"sum\"})\n","agg.sort_values(by='avg2', ascending=False)"],"execution_count":223,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>avg2</th>\n","    </tr>\n","    <tr>\n","      <th>cluster2</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>5.835689e+13</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>1.233335e+13</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                  avg2\n","cluster2              \n","1         5.835689e+13\n","0         1.233335e+13"]},"metadata":{"tags":[]},"execution_count":223}]},{"cell_type":"code","metadata":{"id":"SnTdVbkFE1xm","colab_type":"code","colab":{}},"source":["pd.concat(frames, keys=['Satisfaction_score', 'avg1', 'avg2'])"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"aI5KzlmgxJH6","colab_type":"code","colab":{}},"source":[""],"execution_count":null,"outputs":[]}]}